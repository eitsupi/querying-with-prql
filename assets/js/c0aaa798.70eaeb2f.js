"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[839],{3905:(t,e,a)=>{a.d(e,{Zo:()=>g,kt:()=>N});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function m(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var d=n.createContext({}),p=function(t){var e=n.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},g=function(t){var e=p(t.components);return n.createElement(d.Provider,{value:e},t.children)},s="mdxType",o={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,d=t.parentName,g=m(t,["components","mdxType","originalType","parentName"]),s=p(a),k=r,N=s["".concat(d,".").concat(k)]||s[k]||o[k]||l;return a?n.createElement(N,i(i({ref:e},g),{},{components:a})):n.createElement(N,i({ref:e},g))}));function N(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=k;var m={};for(var d in e)hasOwnProperty.call(e,d)&&(m[d]=e[d]);m.originalType=t,m[s]="string"==typeof t?t:r,i[1]=m;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},5162:(t,e,a)=>{a.d(e,{Z:()=>i});var n=a(7294),r=a(6010);const l={tabItem:"tabItem_Ymn6"};function i(t){let{children:e,hidden:a,className:i}=t;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,i),hidden:a},e)}},4866:(t,e,a)=>{a.d(e,{Z:()=>_});var n=a(7462),r=a(7294),l=a(6010),i=a(2466),m=a(6550),d=a(1980),p=a(7392),g=a(12);function s(t){return function(t){return r.Children.map(t,(t=>{if(!t||(0,r.isValidElement)(t)&&function(t){const{props:e}=t;return!!e&&"object"==typeof e&&"value"in e}(t))return t;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(t).map((t=>{let{props:{value:e,label:a,attributes:n,default:r}}=t;return{value:e,label:a,attributes:n,default:r}}))}function o(t){const{values:e,children:a}=t;return(0,r.useMemo)((()=>{const t=e??s(a);return function(t){const e=(0,p.l)(t,((t,e)=>t.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((t=>t.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(t),t}),[e,a])}function k(t){let{value:e,tabValues:a}=t;return a.some((t=>t.value===e))}function N(t){let{queryString:e=!1,groupId:a}=t;const n=(0,m.k6)(),l=function(t){let{queryString:e=!1,groupId:a}=t;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:e,groupId:a});return[(0,d._X)(l),(0,r.useCallback)((t=>{if(!l)return;const e=new URLSearchParams(n.location.search);e.set(l,t),n.replace({...n.location,search:e.toString()})}),[l,n])]}function h(t){const{defaultValue:e,queryString:a=!1,groupId:n}=t,l=o(t),[i,m]=(0,r.useState)((()=>function(t){let{defaultValue:e,tabValues:a}=t;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!k({value:e,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${a.map((t=>t.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=a.find((t=>t.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:e,tabValues:l}))),[d,p]=N({queryString:a,groupId:n}),[s,h]=function(t){let{groupId:e}=t;const a=function(t){return t?`docusaurus.tab.${t}`:null}(e),[n,l]=(0,g.Nk)(a);return[n,(0,r.useCallback)((t=>{a&&l.set(t)}),[a,l])]}({groupId:n}),u=(()=>{const t=d??s;return k({value:t,tabValues:l})?t:null})();(0,r.useLayoutEffect)((()=>{u&&m(u)}),[u]);return{selectedValue:i,selectValue:(0,r.useCallback)((t=>{if(!k({value:t,tabValues:l}))throw new Error(`Can't select invalid tab value=${t}`);m(t),p(t),h(t)}),[p,h,l]),tabValues:l}}var u=a(2389);const c={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(t){let{className:e,block:a,selectedValue:m,selectValue:d,tabValues:p}=t;const g=[],{blockElementScrollPositionUntilNextRender:s}=(0,i.o5)(),o=t=>{const e=t.currentTarget,a=g.indexOf(e),n=p[a].value;n!==m&&(s(e),d(n))},k=t=>{let e=null;switch(t.key){case"Enter":o(t);break;case"ArrowRight":{const a=g.indexOf(t.currentTarget)+1;e=g[a]??g[0];break}case"ArrowLeft":{const a=g.indexOf(t.currentTarget)-1;e=g[a]??g[g.length-1];break}}e?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},e)},p.map((t=>{let{value:e,label:a,attributes:i}=t;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:m===e?0:-1,"aria-selected":m===e,key:e,ref:t=>g.push(t),onKeyDown:k,onClick:o},i,{className:(0,l.Z)("tabs__item",c.tabItem,i?.className,{"tabs__item--active":m===e})}),a??e)})))}function f(t){let{lazy:e,children:a,selectedValue:n}=t;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(e){const t=l.find((t=>t.props.value===n));return t?(0,r.cloneElement)(t,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((t,e)=>(0,r.cloneElement)(t,{key:e,hidden:t.props.value!==n}))))}function y(t){const e=h(t);return r.createElement("div",{className:(0,l.Z)("tabs-container",c.tabList)},r.createElement(b,(0,n.Z)({},t,e)),r.createElement(f,(0,n.Z)({},t,e)))}function _(t){const e=(0,u.Z)();return r.createElement(y,(0,n.Z)({key:String(e)},t))}},4681:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>g,contentTitle:()=>d,default:()=>h,frontMatter:()=>m,metadata:()=>p,quartoRawHtml:()=>o,toc:()=>s});var n=a(7462),r=(a(7294),a(3905)),l=a(4866),i=a(5162);const m={title:"Reshaping and Tidy Data",description:"Make the data tidy.",engine:"knitr",knitr:{opts_chunk:{connection:"con","engine-opts":{target:"sql.duckdb",use_glue:!0,info_string:'{.sql filename="SQL"}'}}},execute:{cache:!0},sidebar_position:4},d=void 0,p={unversionedId:"tidy",id:"tidy",title:"Reshaping and Tidy Data",description:"Make the data tidy.",source:"@site/docs/tidy.md",sourceDirName:".",slug:"/tidy",permalink:"/querying-with-prql/tidy",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Reshaping and Tidy Data",description:"Make the data tidy.",engine:"knitr",knitr:{opts_chunk:{connection:"con","engine-opts":{target:"sql.duckdb",use_glue:!0,info_string:'{.sql filename="SQL"}'}}},execute:{cache:!0},sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Define Functions",permalink:"/querying-with-prql/method_chaining"},next:{title:"Timeseries",permalink:"/querying-with-prql/timeseries"}},g={},s=[{value:"Read the Data",id:"read-the-data",level:2},{value:"Download",id:"download",level:3},{value:"Load the Data",id:"load-the-data",level:3},{value:"Cleaning",id:"sec-cleaning",level:2},{value:"Tidy Data",id:"sec-tidy-data",level:2},{value:"Unpivot",id:"unpivot",level:3},{value:"Pivot",id:"pivot",level:3}],o=["<div><style>\n.dataframe > thead > tr > th,\n.dataframe > tbody > tr > td {\n  text-align: right;\n}\n</style>\n<small>shape: (5, 5)</small>","</div>","<div><style>\n.dataframe > thead > tr > th,\n.dataframe > tbody > tr > td {\n  text-align: right;\n}\n</style>\n<small>shape: (5, 6)</small>","</div>","<div><style>\n.dataframe > thead > tr > th,\n.dataframe > tbody > tr > td {\n  text-align: right;\n}\n</style>\n<small>shape: (5, 5)</small>","</div>","<div><style>\n.dataframe > thead > tr > th,\n.dataframe > tbody > tr > td {\n  text-align: right;\n}\n</style>\n<small>shape: (5, 10)</small>","</div>"],k={toc:s,quartoRawHtml:o},N="wrapper";function h(t){let{components:e,...a}=t;return(0,r.kt)(N,(0,n.Z)({},k,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"This page is based on the chapter ",(0,r.kt)("a",{parentName:"p",href:"https://kevinheavey.github.io/modern-polars/tidy.html"},"\u201cReshaping and Tidy\nData\u201d")," of the\nModern Polars book.")),(0,r.kt)("h2",{id:"read-the-data"},"Read the Data"),(0,r.kt)("admonition",{type:"important"},(0,r.kt)("p",{parentName:"admonition"},"Since the PRQL and SQL results shown on this page are after being\nconverted to R DataFrame via knitr, they have been converted from DuckDB\ntypes to R types. So ",(0,r.kt)("inlineCode",{parentName:"p"},"NULL")," in DuckDB is shown as ",(0,r.kt)("inlineCode",{parentName:"p"},"NA"),".")),(0,r.kt)("h3",{id:"download"},"Download"),(0,r.kt)("p",null,"Download the data to be analysis (tables on the website) and write the\ndata to CSV files."),(0,r.kt)("p",null,"This document uses R to download the data from the source here, but we\ncan also download and use the CSV files included in the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/kevinheavey/modern-polars/tree/master/data/nba"},"kevinheavey/modern-polars"),"\nGitHub repository."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"R",mdxType:"TabItem"},(0,r.kt)("details",null,(0,r.kt)("summary",null,"Code"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r",metastring:"showLineNumbers",showLineNumbers:!0},'nba_dir <- file.path("data", "nba")\n\nmonths <- c(\n  "october",\n  "november",\n  "december",\n  "january",\n  "february",\n  "march",\n  "april",\n  "may",\n  "june"\n)\n\ncolumn_names <- c(\n  date = "date",\n  away_team = "visitor_neutral",\n  away_points = "pts",\n  home_team = "home_neutral",\n  home_points = "pts_2"\n)\n\n.write_data <- function(month) {\n  base_url <- "http://www.basketball-reference.com/leagues/NBA_2016_games-{month}.html"\n\n  glue::glue(base_url, month = month) |>\n    rvest::read_html() |>\n    rvest::html_table() |>\n    (\\(x) x[[1]])() |> # TODO: Rewrite after R 4.3\n    janitor::clean_names() |>\n    dplyr::select(all_of(column_names)) |>\n    dplyr::filter(date != "Playoffs") |>\n    readr::write_csv(file.path(nba_dir, glue::glue("{month}.csv")))\n}\n\nif (!fs::dir_exists(nba_dir)) {\n  fs::dir_create(nba_dir)\n  months |>\n    purrr::walk(.write_data)\n}\n')))),(0,r.kt)(i.Z,{value:"Shell",mdxType:"TabItem"},(0,r.kt)("p",null,"This is a sample command to download the CSV files from the\n",(0,r.kt)("inlineCode",{parentName:"p"},"kevinheavey/modern-polars")," GitHub repository."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'showLineNumbers title="Terminal"',showLineNumbers:!0,title:'"Terminal"'},"mkdir data/nba\ncurl -sL https://github.com/kevinheavey/modern-polars/raw/87539190dde3e99d5e4c4f9957c78932a33075a0/data/nba/october.csv -o data/nba/october.csv\ncurl -sL https://github.com/kevinheavey/modern-polars/raw/87539190dde3e99d5e4c4f9957c78932a33075a0/data/nba/november.csv -o data/nba/november.csv\ncurl -sL https://github.com/kevinheavey/modern-polars/raw/87539190dde3e99d5e4c4f9957c78932a33075a0/data/nba/december.csv -o data/nba/december.csv\ncurl -sL https://github.com/kevinheavey/modern-polars/raw/87539190dde3e99d5e4c4f9957c78932a33075a0/data/nba/january.csv -o data/nba/january.csv\ncurl -sL https://github.com/kevinheavey/modern-polars/raw/87539190dde3e99d5e4c4f9957c78932a33075a0/data/nba/february.csv -o data/nba/february.csv\ncurl -sL https://github.com/kevinheavey/modern-polars/raw/87539190dde3e99d5e4c4f9957c78932a33075a0/data/nba/march.csv -o data/nba/march.csv\ncurl -sL https://github.com/kevinheavey/modern-polars/raw/87539190dde3e99d5e4c4f9957c78932a33075a0/data/nba/april.csv -o data/nba/april.csv\ncurl -sL https://github.com/kevinheavey/modern-polars/raw/87539190dde3e99d5e4c4f9957c78932a33075a0/data/nba/may.csv -o data/nba/may.csv\ncurl -sL https://github.com/kevinheavey/modern-polars/raw/87539190dde3e99d5e4c4f9957c78932a33075a0/data/nba/june.csv -o data/nba/june.csv\n")))),(0,r.kt)("h3",{id:"load-the-data"},"Load the Data"),(0,r.kt)("p",null,"After the CSV files are ready, load these into DuckDB (in-memory)\ndatabase table, R DataFrame, and Python polars.LazyFrame."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"DuckDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql",metastring:"showLineNumbers",showLineNumbers:!0},"CREATE TABLE tab AS FROM read_csv_auto('data/nba/*.csv')\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql",metastring:"showLineNumbers",showLineNumbers:!0},"FROM tab\nLIMIT 5\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"date"),(0,r.kt)("th",{parentName:"tr",align:"left"},"away_team"),(0,r.kt)("th",{parentName:"tr",align:"right"},"away_points"),(0,r.kt)("th",{parentName:"tr",align:"left"},"home_team"),(0,r.kt)("th",{parentName:"tr",align:"right"},"home_points"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Fri, Jan 1, 2016"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Orlando Magic"),(0,r.kt)("td",{parentName:"tr",align:"right"},"91"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Washington Wizards"),(0,r.kt)("td",{parentName:"tr",align:"right"},"103")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Fri, Jan 1, 2016"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Dallas Mavericks"),(0,r.kt)("td",{parentName:"tr",align:"right"},"82"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Miami Heat"),(0,r.kt)("td",{parentName:"tr",align:"right"},"106")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Fri, Jan 1, 2016"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Charlotte Hornets"),(0,r.kt)("td",{parentName:"tr",align:"right"},"94"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Toronto Raptors"),(0,r.kt)("td",{parentName:"tr",align:"right"},"104")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Fri, Jan 1, 2016"),(0,r.kt)("td",{parentName:"tr",align:"left"},"New York Knicks"),(0,r.kt)("td",{parentName:"tr",align:"right"},"81"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Chicago Bulls"),(0,r.kt)("td",{parentName:"tr",align:"right"},"108")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Fri, Jan 1, 2016"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Philadelphia 76ers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"84"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Los Angeles Lakers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"93"))))),(0,r.kt)(i.Z,{value:"R DataFrame",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r",metastring:"showLineNumbers",showLineNumbers:!0},'library(dplyr, warn.conflicts = FALSE)\n\ndf <- readr::read_csv(\n  fs::dir_ls("data/nba", glob = "*.csv")\n)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r",metastring:"showLineNumbers",showLineNumbers:!0},"df |> head(5)\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"date"),(0,r.kt)("th",{parentName:"tr",align:"left"},"away_team"),(0,r.kt)("th",{parentName:"tr",align:"right"},"away_points"),(0,r.kt)("th",{parentName:"tr",align:"left"},"home_team"),(0,r.kt)("th",{parentName:"tr",align:"right"},"home_points"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Fri, Apr 1, 2016"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Philadelphia 76ers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"91"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Charlotte Hornets"),(0,r.kt)("td",{parentName:"tr",align:"right"},"100")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Fri, Apr 1, 2016"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Dallas Mavericks"),(0,r.kt)("td",{parentName:"tr",align:"right"},"98"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Detroit Pistons"),(0,r.kt)("td",{parentName:"tr",align:"right"},"89")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Fri, Apr 1, 2016"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Brooklyn Nets"),(0,r.kt)("td",{parentName:"tr",align:"right"},"91"),(0,r.kt)("td",{parentName:"tr",align:"left"},"New York Knicks"),(0,r.kt)("td",{parentName:"tr",align:"right"},"105")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Fri, Apr 1, 2016"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Cleveland Cavaliers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"110"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Atlanta Hawks"),(0,r.kt)("td",{parentName:"tr",align:"right"},"108")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Fri, Apr 1, 2016"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Toronto Raptors"),(0,r.kt)("td",{parentName:"tr",align:"right"},"99"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Memphis Grizzlies"),(0,r.kt)("td",{parentName:"tr",align:"right"},"95"))))),(0,r.kt)(i.Z,{value:"Python polars.LazyFrame",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"showLineNumbers",showLineNumbers:!0},'import polars as pl\n\nlf = pl.scan_csv("data/nba/*.csv")\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"showLineNumbers",showLineNumbers:!0},"lf.head(5).collect()\n")),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:o[0]}}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"date"),(0,r.kt)("th",{parentName:"tr",align:null},"away_team"),(0,r.kt)("th",{parentName:"tr",align:null},"away_points"),(0,r.kt)("th",{parentName:"tr",align:null},"home_team"),(0,r.kt)("th",{parentName:"tr",align:null},"home_points"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"str"),(0,r.kt)("td",{parentName:"tr",align:null},"str"),(0,r.kt)("td",{parentName:"tr",align:null},"i64"),(0,r.kt)("td",{parentName:"tr",align:null},"str"),(0,r.kt)("td",{parentName:"tr",align:null},"i64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"Fri, Apr 1, 20\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},'"Philadelphia 7\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"91"),(0,r.kt)("td",{parentName:"tr",align:null},'"Charlotte Horn\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"100")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"Fri, Apr 1, 20\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},'"Dallas Maveric\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"98"),(0,r.kt)("td",{parentName:"tr",align:null},'"Detroit Piston\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"89")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"Fri, Apr 1, 20\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},'"Brooklyn Nets"'),(0,r.kt)("td",{parentName:"tr",align:null},"91"),(0,r.kt)("td",{parentName:"tr",align:null},'"New York Knick\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"105")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"Fri, Apr 1, 20\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},'"Cleveland Cava\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"110"),(0,r.kt)("td",{parentName:"tr",align:null},'"Atlanta Hawks"'),(0,r.kt)("td",{parentName:"tr",align:null},"108")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'"Fri, Apr 1, 20\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},'"Toronto Raptor\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"99"),(0,r.kt)("td",{parentName:"tr",align:null},'"Memphis Grizzl\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"95")))),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:o[1]}}))),(0,r.kt)("h2",{id:"sec-cleaning"},"Cleaning"),(0,r.kt)("p",null,"Convert the ",(0,r.kt)("inlineCode",{parentName:"p"},"date")," column to date type and delete rows containing\nmissing values (",(0,r.kt)("inlineCode",{parentName:"p"},"null"),")."),(0,r.kt)("p",null,"PRQL does not have a \u201cremove rows with missing values in any column\u201d\nsyntax (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/PRQL/prql/issues/2386"},"PRQL/prql#2386"),"), but\nDuckDB SQL does (",">","= 0.8,\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/duckdb/duckdb/pull/6621"},"duckdb/duckdb#6621"),"), so it\ncan be used."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"PRQL DuckDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elm",metastring:"showLineNumbers",showLineNumbers:!0},'let games = (\n  from tab\n  filter s"COLUMNS(*) IS NOT NULL"\n  derive date_new = (s"strptime(date, \'%a, %b %d, %Y\')" | as date)\n  select !{this.date} # `this` points to refer to current relation\n  sort date_new\n  derive game_id = (row_number this)\n)\n\nfrom games\ntake 5\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"away_team"),(0,r.kt)("th",{parentName:"tr",align:"right"},"away_points"),(0,r.kt)("th",{parentName:"tr",align:"left"},"home_team"),(0,r.kt)("th",{parentName:"tr",align:"right"},"home_points"),(0,r.kt)("th",{parentName:"tr",align:"left"},"date_new"),(0,r.kt)("th",{parentName:"tr",align:"right"},"game_id"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Cleveland Cavaliers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"95"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Chicago Bulls"),(0,r.kt)("td",{parentName:"tr",align:"right"},"97"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-27"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Detroit Pistons"),(0,r.kt)("td",{parentName:"tr",align:"right"},"106"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Atlanta Hawks"),(0,r.kt)("td",{parentName:"tr",align:"right"},"94"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-27"),(0,r.kt)("td",{parentName:"tr",align:"right"},"2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"New Orleans Pelicans"),(0,r.kt)("td",{parentName:"tr",align:"right"},"95"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Golden State Warriors"),(0,r.kt)("td",{parentName:"tr",align:"right"},"111"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-27"),(0,r.kt)("td",{parentName:"tr",align:"right"},"3")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Washington Wizards"),(0,r.kt)("td",{parentName:"tr",align:"right"},"88"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Orlando Magic"),(0,r.kt)("td",{parentName:"tr",align:"right"},"87"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"right"},"4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Philadelphia 76ers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"95"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Boston Celtics"),(0,r.kt)("td",{parentName:"tr",align:"right"},"112"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"right"},"5"))))),(0,r.kt)(i.Z,{value:"SQL DuckDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql",metastring:"showLineNumbers",showLineNumbers:!0},"CREATE TABLE games AS (\n  WITH _tab1 AS (\n      SELECT\n        * REPLACE (strptime(date, '%a, %b %d, %Y')::date AS date)\n      FROM tab\n      WHERE COLUMNS(*) IS NOT NULL\n    )\n\n  SELECT\n    row_number() OVER(ORDER BY date) AS game_id,\n    *\n  FROM _tab1\n  ORDER BY date\n)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql",metastring:"showLineNumbers",showLineNumbers:!0},"FROM games\nLIMIT 5\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"right"},"game_id"),(0,r.kt)("th",{parentName:"tr",align:"left"},"date"),(0,r.kt)("th",{parentName:"tr",align:"left"},"away_team"),(0,r.kt)("th",{parentName:"tr",align:"right"},"away_points"),(0,r.kt)("th",{parentName:"tr",align:"left"},"home_team"),(0,r.kt)("th",{parentName:"tr",align:"right"},"home_points"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-27"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Cleveland Cavaliers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"95"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Chicago Bulls"),(0,r.kt)("td",{parentName:"tr",align:"right"},"97")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-27"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Detroit Pistons"),(0,r.kt)("td",{parentName:"tr",align:"right"},"106"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Atlanta Hawks"),(0,r.kt)("td",{parentName:"tr",align:"right"},"94")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-27"),(0,r.kt)("td",{parentName:"tr",align:"left"},"New Orleans Pelicans"),(0,r.kt)("td",{parentName:"tr",align:"right"},"95"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Golden State Warriors"),(0,r.kt)("td",{parentName:"tr",align:"right"},"111")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Washington Wizards"),(0,r.kt)("td",{parentName:"tr",align:"right"},"88"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Orlando Magic"),(0,r.kt)("td",{parentName:"tr",align:"right"},"87")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Philadelphia 76ers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"95"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Boston Celtics"),(0,r.kt)("td",{parentName:"tr",align:"right"},"112"))))),(0,r.kt)(i.Z,{value:"dplyr R",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r",metastring:"showLineNumbers",showLineNumbers:!0},'games <- df |>\n  filter(!if_any(everything(), is.na)) |> # Also can use `tidyr::drop_na`\n  mutate(\n    date = lubridate::parse_date_time(date, "%a, %b %d, %Y") |>\n      lubridate::as_date()\n  ) |>\n  arrange(date) |>\n  mutate(game_id = row_number(), .before = 1)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r",metastring:"showLineNumbers",showLineNumbers:!0},"games |>\n  head(5)\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"right"},"game_id"),(0,r.kt)("th",{parentName:"tr",align:"left"},"date"),(0,r.kt)("th",{parentName:"tr",align:"left"},"away_team"),(0,r.kt)("th",{parentName:"tr",align:"right"},"away_points"),(0,r.kt)("th",{parentName:"tr",align:"left"},"home_team"),(0,r.kt)("th",{parentName:"tr",align:"right"},"home_points"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-27"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Cleveland Cavaliers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"95"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Chicago Bulls"),(0,r.kt)("td",{parentName:"tr",align:"right"},"97")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-27"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Detroit Pistons"),(0,r.kt)("td",{parentName:"tr",align:"right"},"106"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Atlanta Hawks"),(0,r.kt)("td",{parentName:"tr",align:"right"},"94")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-27"),(0,r.kt)("td",{parentName:"tr",align:"left"},"New Orleans Pelicans"),(0,r.kt)("td",{parentName:"tr",align:"right"},"95"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Golden State Warriors"),(0,r.kt)("td",{parentName:"tr",align:"right"},"111")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Washington Wizards"),(0,r.kt)("td",{parentName:"tr",align:"right"},"88"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Orlando Magic"),(0,r.kt)("td",{parentName:"tr",align:"right"},"87")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Philadelphia 76ers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"95"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Boston Celtics"),(0,r.kt)("td",{parentName:"tr",align:"right"},"112"))))),(0,r.kt)(i.Z,{value:"Python Polars",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"showLineNumbers",showLineNumbers:!0},'games = (\n    lf.filter(~pl.any(pl.all().is_null())) # Also can use `polars.LazyFrame.drop_nulls`\n    .with_columns(\n        pl.col("date").str.strptime(pl.Date, "%a, %b %d, %Y"),\n    )\n    .sort("date")\n    .with_row_count("game_id")\n    .collect()\n)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"<string>:2: DeprecationWarning: using `any` for horizontal computation is deprecated. Use `any_horizontal` instead.\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"showLineNumbers",showLineNumbers:!0},"games.head(5)\n")),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:o[2]}}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"game_id"),(0,r.kt)("th",{parentName:"tr",align:null},"date"),(0,r.kt)("th",{parentName:"tr",align:null},"away_team"),(0,r.kt)("th",{parentName:"tr",align:null},"away_points"),(0,r.kt)("th",{parentName:"tr",align:null},"home_team"),(0,r.kt)("th",{parentName:"tr",align:null},"home_points"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"u32"),(0,r.kt)("td",{parentName:"tr",align:null},"date"),(0,r.kt)("td",{parentName:"tr",align:null},"str"),(0,r.kt)("td",{parentName:"tr",align:null},"i64"),(0,r.kt)("td",{parentName:"tr",align:null},"str"),(0,r.kt)("td",{parentName:"tr",align:null},"i64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"2015-10-27"),(0,r.kt)("td",{parentName:"tr",align:null},'"Cleveland Cava\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"95"),(0,r.kt)("td",{parentName:"tr",align:null},'"Chicago Bulls"'),(0,r.kt)("td",{parentName:"tr",align:null},"97")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"2015-10-27"),(0,r.kt)("td",{parentName:"tr",align:null},'"Detroit Piston\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"106"),(0,r.kt)("td",{parentName:"tr",align:null},'"Atlanta Hawks"'),(0,r.kt)("td",{parentName:"tr",align:null},"94")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"2015-10-27"),(0,r.kt)("td",{parentName:"tr",align:null},'"New Orleans Pe\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"95"),(0,r.kt)("td",{parentName:"tr",align:null},'"Golden State W\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"111")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:null},'"Washington Wiz\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"88"),(0,r.kt)("td",{parentName:"tr",align:null},'"Orlando Magic"'),(0,r.kt)("td",{parentName:"tr",align:null},"87")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:null},'"Philadelphia 7\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"95"),(0,r.kt)("td",{parentName:"tr",align:null},'"Boston Celtics\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"112")))),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:o[3]}}))),(0,r.kt)("p",null,"Looking at the result tables, we notice that the PRQL result is\ndifferent from the other results; A column named ",(0,r.kt)("inlineCode",{parentName:"p"},"date")," in other results\nis named ",(0,r.kt)("inlineCode",{parentName:"p"},"date_new")," in PRQL. This is because another name is needed to\navoid the behavior that using the column name ",(0,r.kt)("inlineCode",{parentName:"p"},"date")," here would add a\nnew column called ",(0,r.kt)("inlineCode",{parentName:"p"},"date:1")," instead of updating the original ",(0,r.kt)("inlineCode",{parentName:"p"},"date"),"\ncolumn."),(0,r.kt)("p",null,"In DuckDB SQL, we can use ",(0,r.kt)("a",{parentName:"p",href:"https://duckdb.org/docs/sql/expressions/star#replace-clause"},"Replace\nClause")," to\nupdate the original column with the same column name."),(0,r.kt)("p",null,"The SQL generated by the PRQL compiler looks like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql",metastring:'showLineNumbers title="SQL"',showLineNumbers:!0,title:'"SQL"'},"WITH games AS (\n  SELECT\n    * EXCLUDE (date),\n    CAST(strptime(date, '%a, %b %d, %Y') AS date) AS date_new,\n    ROW_NUMBER() OVER (\n      ORDER BY\n        CAST(strptime(date, '%a, %b %d, %Y') AS date)\n    ) AS game_id\n  FROM\n    tab\n  WHERE\n    COLUMNS(*) IS NOT NULL\n)\nSELECT\n  *\nFROM\n  games\nORDER BY\n  date_new\nLIMIT\n  5\n\n-- Generated by PRQL compiler version:0.9.2 target:sql.duckdb (https://prql-lang.org)\n")),(0,r.kt)("h2",{id:"sec-tidy-data"},"Tidy Data"),(0,r.kt)("admonition",{type:"important"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"PRQL does not yet support PIVOT and UNPIVOT.\n(",(0,r.kt)("a",{parentName:"li",href:"https://github.com/PRQL/prql/issues/644"},"PRQL/prql#644"),")"),(0,r.kt)("li",{parentName:"ul"},"DuckDB SQL supports PIVOT and UNPIVOT ",">","= 0.8.\n(",(0,r.kt)("a",{parentName:"li",href:"https://github.com/duckdb/duckdb/pull/6387"},"duckdb/duckdb#6387"),")"))),(0,r.kt)("h3",{id:"unpivot"},"Unpivot"),(0,r.kt)("p",null,"Transforms the data from wide format to long format. This transformation\nis called by names such as unpivot, pivot longer, and melt."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"PRQL DuckDB",mdxType:"TabItem"},(0,r.kt)("admonition",{type:"important"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"games")," in this query is defiened in"),(0,r.kt)("a",{href:"#sec-cleaning",class:"quarto-xref"},"Section\xa02")," with SQL, not with PRQL."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elm",metastring:"showLineNumbers",showLineNumbers:!0},'from s"""\nSELECT *\nFROM (\n  PIVOT_LONGER games\n  ON away_team, home_team\n  INTO\n    NAME variable\n    VALUE team\n)\n"""\ngroup {team} (\n  sort this.date\n  derive rest = this.date - (this.date | lag 1) - 1\n)\nselect !{away_points, home_points}\nfilter rest != null\nsort game_id\ntake 5\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"right"},"game_id"),(0,r.kt)("th",{parentName:"tr",align:"left"},"date"),(0,r.kt)("th",{parentName:"tr",align:"left"},"variable"),(0,r.kt)("th",{parentName:"tr",align:"left"},"team"),(0,r.kt)("th",{parentName:"tr",align:"right"},"rest"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"away_team"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Chicago Bulls"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"home_team"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Detroit Pistons"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"12"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"away_team"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Cleveland Cavaliers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"15"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"away_team"),(0,r.kt)("td",{parentName:"tr",align:"left"},"New Orleans Pelicans"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-29"),(0,r.kt)("td",{parentName:"tr",align:"left"},"home_team"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Indiana Pacers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0"))))),(0,r.kt)(i.Z,{value:"SQL DuckDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql",metastring:"showLineNumbers",showLineNumbers:!0},"CREATE TABLE tidy AS (\n  WITH _tab1 AS (\n    PIVOT_LONGER games\n    ON away_team, home_team\n    INTO\n      NAME variable\n      VALUE team\n  ),\n\n  _tab2 AS (\n    SELECT\n      COLUMNS(x -> NOT suffix(x, '_points'))\n    FROM _tab1\n  ),\n\n  _tab3 AS (\n    SELECT\n      *,\n      date - lag(date) OVER (PARTITION BY team ORDER BY date) -1 AS rest\n    FROM _tab2\n  )\n\n  SELECT *\n  FROM _tab3\n  WHERE rest IS NOT NULL\n  ORDER BY game_id\n)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql",metastring:"showLineNumbers",showLineNumbers:!0},"FROM tidy\nLIMIT 5\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"right"},"game_id"),(0,r.kt)("th",{parentName:"tr",align:"left"},"date"),(0,r.kt)("th",{parentName:"tr",align:"left"},"variable"),(0,r.kt)("th",{parentName:"tr",align:"left"},"team"),(0,r.kt)("th",{parentName:"tr",align:"right"},"rest"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"away_team"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Chicago Bulls"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"home_team"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Detroit Pistons"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"12"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"away_team"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Cleveland Cavaliers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"15"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"away_team"),(0,r.kt)("td",{parentName:"tr",align:"left"},"New Orleans Pelicans"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-29"),(0,r.kt)("td",{parentName:"tr",align:"left"},"home_team"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Indiana Pacers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0"))))),(0,r.kt)(i.Z,{value:"dplyr R",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r",metastring:"showLineNumbers",showLineNumbers:!0},'tidy <- games |>\n  tidyr::pivot_longer(\n    cols = c(away_team, home_team),\n    names_to = "variable",\n    values_to = "team"\n  ) |>\n  select(!ends_with("_points")) |>\n  arrange(game_id) |>\n  mutate(\n    rest = date - lag(date) - 1,\n    .by = team\n  ) |>\n  filter(!is.na(rest))\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r",metastring:"showLineNumbers",showLineNumbers:!0},"tidy |>\n  head(5)\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"right"},"game_id"),(0,r.kt)("th",{parentName:"tr",align:"left"},"date"),(0,r.kt)("th",{parentName:"tr",align:"left"},"variable"),(0,r.kt)("th",{parentName:"tr",align:"left"},"team"),(0,r.kt)("th",{parentName:"tr",align:"left"},"rest"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"away_team"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Chicago Bulls"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 days")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"home_team"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Detroit Pistons"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 days")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"12"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"away_team"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Cleveland Cavaliers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 days")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"15"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"away_team"),(0,r.kt)("td",{parentName:"tr",align:"left"},"New Orleans Pelicans"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 days")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-29"),(0,r.kt)("td",{parentName:"tr",align:"left"},"away_team"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Memphis Grizzlies"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 days"))))),(0,r.kt)(i.Z,{value:"Python Polars",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"showLineNumbers",showLineNumbers:!0},'tidy = (\n    games.melt(\n        id_vars=["game_id", "date"],\n        value_vars=["away_team", "home_team"],\n        value_name="team",\n    )\n    .sort("game_id")\n    .with_columns(rest=(pl.col("date").diff().over("team").dt.days() - 1).cast(pl.Int8))\n    .drop_nulls("rest")\n)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"showLineNumbers",showLineNumbers:!0},"tidy.head(5)\n")),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:o[4]}}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"game_id"),(0,r.kt)("th",{parentName:"tr",align:null},"date"),(0,r.kt)("th",{parentName:"tr",align:null},"variable"),(0,r.kt)("th",{parentName:"tr",align:null},"team"),(0,r.kt)("th",{parentName:"tr",align:null},"rest"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"u32"),(0,r.kt)("td",{parentName:"tr",align:null},"date"),(0,r.kt)("td",{parentName:"tr",align:null},"str"),(0,r.kt)("td",{parentName:"tr",align:null},"str"),(0,r.kt)("td",{parentName:"tr",align:null},"i8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:null},'"away_team"'),(0,r.kt)("td",{parentName:"tr",align:null},'"Chicago Bulls"'),(0,r.kt)("td",{parentName:"tr",align:null},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"6"),(0,r.kt)("td",{parentName:"tr",align:null},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:null},'"home_team"'),(0,r.kt)("td",{parentName:"tr",align:null},'"Detroit Piston\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"11"),(0,r.kt)("td",{parentName:"tr",align:null},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:null},'"away_team"'),(0,r.kt)("td",{parentName:"tr",align:null},'"Cleveland Cava\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"14"),(0,r.kt)("td",{parentName:"tr",align:null},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:null},'"away_team"'),(0,r.kt)("td",{parentName:"tr",align:null},'"New Orleans Pe\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"17"),(0,r.kt)("td",{parentName:"tr",align:null},"2015-10-29"),(0,r.kt)("td",{parentName:"tr",align:null},'"away_team"'),(0,r.kt)("td",{parentName:"tr",align:null},'"Memphis Grizzl\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"0")))),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:o[5]}}))),(0,r.kt)("p",null,"PRQL, SQL and dplyr remove unnecessary columns after UNPIVOT (columns\nthat were automatically removed in the original Polars and Pandas\nexample)."),(0,r.kt)("h3",{id:"pivot"},"Pivot"),(0,r.kt)("p",null,"Transforms the data from long format to wide format. This transformation\nis called by names such as pivot, pivot wider."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"PRQL DuckDB",mdxType:"TabItem"},(0,r.kt)("admonition",{type:"important"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"tidy")," in this query is defiened in"),(0,r.kt)("a",{href:"#sec-tidy-data",class:"quarto-xref"},"Section\xa03")," with SQL, and `games` is defiened in",(0,r.kt)("a",{href:"#sec-cleaning",class:"quarto-xref"},"Section\xa02")," with SQL."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elm",metastring:"showLineNumbers",showLineNumbers:!0},'from s"""\nSELECT *\nFROM (\n  PIVOT_WIDER tidy ON variable USING FIRST(rest) GROUP BY (game_id, date)\n)\n"""\nderive {\n  away_rest = away_team,\n  home_rest = home_team\n}\nselect !{\n  away_team,\n  home_team\n}\njoin side:left games (==game_id && ==date)\nderive {\n  home_win = games.home_points > games.away_points,\n  rest_spread = home_rest - away_rest\n}\nsort games.game_id\ntake 5\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"right"},"game_id"),(0,r.kt)("th",{parentName:"tr",align:"left"},"date"),(0,r.kt)("th",{parentName:"tr",align:"right"},"away_rest"),(0,r.kt)("th",{parentName:"tr",align:"right"},"home_rest"),(0,r.kt)("th",{parentName:"tr",align:"right"},"game_id"),(0,r.kt)("th",{parentName:"tr",align:"left"},"date"),(0,r.kt)("th",{parentName:"tr",align:"left"},"away_team"),(0,r.kt)("th",{parentName:"tr",align:"right"},"away_points"),(0,r.kt)("th",{parentName:"tr",align:"left"},"home_team"),(0,r.kt)("th",{parentName:"tr",align:"right"},"home_points"),(0,r.kt)("th",{parentName:"tr",align:"left"},"home_win"),(0,r.kt)("th",{parentName:"tr",align:"right"},"rest_spread"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Chicago Bulls"),(0,r.kt)("td",{parentName:"tr",align:"right"},"115"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Brooklyn Nets"),(0,r.kt)("td",{parentName:"tr",align:"right"},"100"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FALSE"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0"),(0,r.kt)("td",{parentName:"tr",align:"right"},"7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Utah Jazz"),(0,r.kt)("td",{parentName:"tr",align:"right"},"87"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Detroit Pistons"),(0,r.kt)("td",{parentName:"tr",align:"right"},"92"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"12"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"12"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Cleveland Cavaliers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"106"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Memphis Grizzlies"),(0,r.kt)("td",{parentName:"tr",align:"right"},"76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FALSE"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"15"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"15"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"New Orleans Pelicans"),(0,r.kt)("td",{parentName:"tr",align:"right"},"94"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Portland Trail Blazers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"112"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-29"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0"),(0,r.kt)("td",{parentName:"tr",align:"right"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-29"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Memphis Grizzlies"),(0,r.kt)("td",{parentName:"tr",align:"right"},"112"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Indiana Pacers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"103"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FALSE"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0"))))),(0,r.kt)(i.Z,{value:"SQL DuckDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql",metastring:"showLineNumbers",showLineNumbers:!0},"CREATE TABLE by_game AS (\n  WITH _tab1 AS (\n    PIVOT_WIDER tidy ON variable USING FIRST(rest) GROUP BY (game_id, date)\n  )\n\n  SELECT\n    * EXCLUDE(away_team, home_team),\n    away_team AS away_rest,\n    home_team AS home_rest\n  FROM _tab1\n)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql",metastring:"showLineNumbers",showLineNumbers:!0},"CREATE TABLE joined AS (\n  SELECT\n    *,\n    home_points > away_points AS home_win,\n    home_rest - away_rest AS rest_spread\n  FROM by_game\n  LEFT JOIN games USING (game_id, date)\n  ORDER BY game_id\n)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql",metastring:"showLineNumbers",showLineNumbers:!0},"FROM joined\nLIMIT 5\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"right"},"game_id"),(0,r.kt)("th",{parentName:"tr",align:"left"},"date"),(0,r.kt)("th",{parentName:"tr",align:"right"},"away_rest"),(0,r.kt)("th",{parentName:"tr",align:"right"},"home_rest"),(0,r.kt)("th",{parentName:"tr",align:"left"},"away_team"),(0,r.kt)("th",{parentName:"tr",align:"right"},"away_points"),(0,r.kt)("th",{parentName:"tr",align:"left"},"home_team"),(0,r.kt)("th",{parentName:"tr",align:"right"},"home_points"),(0,r.kt)("th",{parentName:"tr",align:"left"},"home_win"),(0,r.kt)("th",{parentName:"tr",align:"right"},"rest_spread"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Chicago Bulls"),(0,r.kt)("td",{parentName:"tr",align:"right"},"115"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Brooklyn Nets"),(0,r.kt)("td",{parentName:"tr",align:"right"},"100"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FALSE"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Utah Jazz"),(0,r.kt)("td",{parentName:"tr",align:"right"},"87"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Detroit Pistons"),(0,r.kt)("td",{parentName:"tr",align:"right"},"92"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"12"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Cleveland Cavaliers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"106"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Memphis Grizzlies"),(0,r.kt)("td",{parentName:"tr",align:"right"},"76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FALSE"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"15"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"left"},"New Orleans Pelicans"),(0,r.kt)("td",{parentName:"tr",align:"right"},"94"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Portland Trail Blazers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"112"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-29"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Memphis Grizzlies"),(0,r.kt)("td",{parentName:"tr",align:"right"},"112"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Indiana Pacers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"103"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FALSE"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0"))))),(0,r.kt)(i.Z,{value:"dplyr R",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r",metastring:"showLineNumbers",showLineNumbers:!0},'by_game <- tidy |>\n  tidyr::pivot_wider(\n    id_cols = c("game_id", "date"),\n    values_from = "rest",\n    names_from = "variable"\n  ) |>\n  rename(\n    away_rest = away_team,\n    home_rest = home_team\n  )\n\njoined <- by_game |>\n  left_join(games, by = c("game_id", "date")) |>\n  mutate(\n    home_win = home_points > away_points,\n    rest_spread = home_rest - away_rest\n  )\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r",metastring:"showLineNumbers",showLineNumbers:!0},"joined |>\n  head(5)\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"right"},"game_id"),(0,r.kt)("th",{parentName:"tr",align:"left"},"date"),(0,r.kt)("th",{parentName:"tr",align:"left"},"away_rest"),(0,r.kt)("th",{parentName:"tr",align:"left"},"home_rest"),(0,r.kt)("th",{parentName:"tr",align:"left"},"away_team"),(0,r.kt)("th",{parentName:"tr",align:"right"},"away_points"),(0,r.kt)("th",{parentName:"tr",align:"left"},"home_team"),(0,r.kt)("th",{parentName:"tr",align:"right"},"home_points"),(0,r.kt)("th",{parentName:"tr",align:"left"},"home_win"),(0,r.kt)("th",{parentName:"tr",align:"left"},"rest_spread"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 days"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NA days"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Chicago Bulls"),(0,r.kt)("td",{parentName:"tr",align:"right"},"115"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Brooklyn Nets"),(0,r.kt)("td",{parentName:"tr",align:"right"},"100"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FALSE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NA days")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NA days"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 days"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Utah Jazz"),(0,r.kt)("td",{parentName:"tr",align:"right"},"87"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Detroit Pistons"),(0,r.kt)("td",{parentName:"tr",align:"right"},"92"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NA days")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"12"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 days"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NA days"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Cleveland Cavaliers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"106"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Memphis Grizzlies"),(0,r.kt)("td",{parentName:"tr",align:"right"},"76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FALSE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NA days")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"15"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 days"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NA days"),(0,r.kt)("td",{parentName:"tr",align:"left"},"New Orleans Pelicans"),(0,r.kt)("td",{parentName:"tr",align:"right"},"94"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Portland Trail Blazers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"112"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NA days")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2015-10-29"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 days"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 days"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Memphis Grizzlies"),(0,r.kt)("td",{parentName:"tr",align:"right"},"112"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Indiana Pacers"),(0,r.kt)("td",{parentName:"tr",align:"right"},"103"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FALSE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0 days"))))),(0,r.kt)(i.Z,{value:"Python Polars",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"showLineNumbers",showLineNumbers:!0},'by_game = tidy.pivot(\n    values="rest", index=["game_id", "date"], columns="variable"\n).rename({"away_team": "away_rest", "home_team": "home_rest"})\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"<string>:1: DeprecationWarning: In a future version of polars, the default `aggregate_function` will change from `'first'` to `None`. Please pass `'first'` to keep the current behaviour, or `None` to accept the new one.\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"showLineNumbers",showLineNumbers:!0},'\njoined = by_game.join(games, on=["game_id", "date"]).with_columns(\n    home_win=pl.col("home_points") > pl.col("away_points"),\n    rest_spread=pl.col("home_rest") - pl.col("away_rest"),\n)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"showLineNumbers",showLineNumbers:!0},"joined.head(5)\n")),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:o[6]}}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"game_id"),(0,r.kt)("th",{parentName:"tr",align:null},"date"),(0,r.kt)("th",{parentName:"tr",align:null},"away_rest"),(0,r.kt)("th",{parentName:"tr",align:null},"home_rest"),(0,r.kt)("th",{parentName:"tr",align:null},"away_team"),(0,r.kt)("th",{parentName:"tr",align:null},"away_points"),(0,r.kt)("th",{parentName:"tr",align:null},"home_team"),(0,r.kt)("th",{parentName:"tr",align:null},"home_points"),(0,r.kt)("th",{parentName:"tr",align:null},"home_win"),(0,r.kt)("th",{parentName:"tr",align:null},"rest_spread"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"u32"),(0,r.kt)("td",{parentName:"tr",align:null},"date"),(0,r.kt)("td",{parentName:"tr",align:null},"i8"),(0,r.kt)("td",{parentName:"tr",align:null},"i8"),(0,r.kt)("td",{parentName:"tr",align:null},"str"),(0,r.kt)("td",{parentName:"tr",align:null},"i64"),(0,r.kt)("td",{parentName:"tr",align:null},"str"),(0,r.kt)("td",{parentName:"tr",align:null},"i64"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"i8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},'"Chicago Bulls"'),(0,r.kt)("td",{parentName:"tr",align:null},"115"),(0,r.kt)("td",{parentName:"tr",align:null},'"Brooklyn Nets"'),(0,r.kt)("td",{parentName:"tr",align:null},"100"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"6"),(0,r.kt)("td",{parentName:"tr",align:null},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},'"Utah Jazz"'),(0,r.kt)("td",{parentName:"tr",align:null},"87"),(0,r.kt)("td",{parentName:"tr",align:null},'"Detroit Piston\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"92"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"11"),(0,r.kt)("td",{parentName:"tr",align:null},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},'"Cleveland Cava\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"106"),(0,r.kt)("td",{parentName:"tr",align:null},'"Memphis Grizzl\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"76"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"14"),(0,r.kt)("td",{parentName:"tr",align:null},"2015-10-28"),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},'"New Orleans Pe\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"94"),(0,r.kt)("td",{parentName:"tr",align:null},'"Portland Trail\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"112"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"17"),(0,r.kt)("td",{parentName:"tr",align:null},"2015-10-29"),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},'"Memphis Grizzl\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"112"),(0,r.kt)("td",{parentName:"tr",align:null},'"Indiana Pacers\u2026'),(0,r.kt)("td",{parentName:"tr",align:null},"103"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"0")))),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:o[7]}}))),(0,r.kt)("p",null,"There are more columns in the PRQL result than in the other results.\nBecause the output SQL is not using ",(0,r.kt)("inlineCode",{parentName:"p"},"USING")," for joins\n(",(0,r.kt)("a",{parentName:"p",href:"https://github.com/PRQL/prql/issues/1335"},"PRQL/prql#1335"),")."),(0,r.kt)("p",null,"The SQL generated by the PRQL compiler looks like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql",metastring:'showLineNumbers title="SQL"',showLineNumbers:!0,title:'"SQL"'},"WITH table_0 AS (\n  SELECT\n    *\n  FROM\n    (\n      PIVOT_WIDER tidy ON variable USING FIRST(rest)\n      GROUP BY\n        (game_id, date)\n    )\n),\ntable_1 AS (\n  SELECT\n    * EXCLUDE (away_team, home_team),\n    away_team AS away_rest,\n    home_team AS home_rest\n  FROM\n    table_0\n)\nSELECT\n  table_1.*,\n  games.*,\n  games.home_points > games.away_points AS home_win,\n  table_1.home_rest - table_1.away_rest AS rest_spread\nFROM\n  table_1\n  LEFT JOIN games ON table_1.game_id = games.game_id\n  AND table_1.date = games.date\nORDER BY\n  games.game_id\nLIMIT\n  5\n\n-- Generated by PRQL compiler version:0.9.2 target:sql.duckdb (https://prql-lang.org)\n")))}h.isMDXComponent=!0}}]);