"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[671],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,h=c["".concat(l,".").concat(m)]||c[m]||d[m]||o;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9881:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={title:"Introduction",engine:"knitr",sidebar_position:1,slug:"/"},i="Introduction",s={unversionedId:"intro",id:"intro",title:"Introduction",description:"introduction}",source:"@site/docs/intro.md",sourceDirName:".",slug:"/",permalink:"/querying-with-prql/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Introduction",engine:"knitr",sidebar_position:1,slug:"/"},sidebar:"tutorialSidebar",next:{title:"Selecting and Filtering",permalink:"/querying-with-prql/indexing"}},l={},u=[{value:"Motivation",id:"motivation",level:2},{value:"Content and Credit",id:"content-and-credit",level:2}],p={toc:u},c="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"This document is an attempt to do some typical table data manipulation\nusing ",(0,a.kt)("a",{parentName:"p",href:"https://prql-lang.org/"},"PRQL")," and ",(0,a.kt)("a",{parentName:"p",href:"https://duckdb.org/"},"DuckDB"),"."),(0,a.kt)("p",null,"PRQL is a in development modern language for data manipulation, and can\nbe compiled to SQL. DuckDB is a modern in-memory SQL OLAP (",(0,a.kt)("a",{parentName:"p",href:"https://duckdblabs.github.io/db-benchmark/"},"very\nfast"),") database management\nsystem."),(0,a.kt)("h2",{id:"motivation"},"Motivation"),(0,a.kt)("p",null,"CLI, JavaScript, Python, R, etc., we can combine PRQL compiler and\nDuckDB in various places to manipulate data with PRQL."),(0,a.kt)("p",null,"At the same time, new features are being added to DuckDB\u2019s SQL on a\nconstant basis, and the syntax is becoming more friendly."),(0,a.kt)("p",null,"So, I thought that by comparing PRQL and the latest DuckDB SQL (and\nother query libraries), we could clarify the missing features of the\nPRQL and highlight the latest features of DuckDB."),(0,a.kt)("h2",{id:"content-and-credit"},"Content and Credit"),(0,a.kt)("p",null,"The content of each data manipulation is based on the awesome ",(0,a.kt)("a",{parentName:"p",href:"https://kevinheavey.github.io/modern-polars/"},"Modern\nPolars")," book by ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kevinheavey"},"Kevin\nHeavey"),". And furthermore its origin is\n",(0,a.kt)("a",{parentName:"p",href:"https://tomaugspurger.github.io/posts/modern-1-intro/"},"Modern Pandas"),"\nby ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/TomAugspurger"},"Tom Augsburger"),"."),(0,a.kt)("p",null,"Each query is side-by-side with that of the original ",(0,a.kt)("a",{parentName:"p",href:"https://pola-rs.github.io/polars/py-polars/html/reference/"},"Python\nPolars")," one\nand the equivalent operations in PRQL, DuckDB SQL, and\n",(0,a.kt)("a",{parentName:"p",href:"https://dplyr.tidyverse.org/"},"dplyr")," (R)."),(0,a.kt)("p",null,"Since this document focuses on the differences between the grammars of\nthe different languages and does not go into detail about the processing\ndetails, I suggest that you also check out the original excellent\nartcles and book."),(0,a.kt)("admonition",{type:"important"},(0,a.kt)("p",{parentName:"admonition"},"An unreleased version of DuckDB is used at this time and queries may\ncontain features that are not available in the released version. The\nversions we are currently using are as follows:"),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"PRQL: 0.8.0"),(0,a.kt)("li",{parentName:"ul"},"DuckDB: 0.7.2-dev1867"))))}d.isMDXComponent=!0}}]);