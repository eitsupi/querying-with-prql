"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[378],{3905:(t,a,e)=>{e.d(a,{Zo:()=>d,kt:()=>o});var n=e(7294);function r(t,a,e){return a in t?Object.defineProperty(t,a,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[a]=e,t}function l(t,a){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(t,a).enumerable}))),e.push.apply(e,n)}return e}function i(t){for(var a=1;a<arguments.length;a++){var e=null!=arguments[a]?arguments[a]:{};a%2?l(Object(e),!0).forEach((function(a){r(t,a,e[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):l(Object(e)).forEach((function(a){Object.defineProperty(t,a,Object.getOwnPropertyDescriptor(e,a))}))}return t}function m(t,a){if(null==t)return{};var e,n,r=function(t,a){if(null==t)return{};var e,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)e=l[n],a.indexOf(e)>=0||(r[e]=t[e]);return r}(t,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)e=l[n],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(r[e]=t[e])}return r}var g=n.createContext({}),p=function(t){var a=n.useContext(g),e=a;return t&&(e="function"==typeof t?t(a):i(i({},a),t)),e},d=function(t){var a=p(t.components);return n.createElement(g.Provider,{value:a},t.children)},k="mdxType",N={inlineCode:"code",wrapper:function(t){var a=t.children;return n.createElement(n.Fragment,{},a)}},h=n.forwardRef((function(t,a){var e=t.components,r=t.mdxType,l=t.originalType,g=t.parentName,d=m(t,["components","mdxType","originalType","parentName"]),k=p(e),h=r,o=k["".concat(g,".").concat(h)]||k[h]||N[h]||l;return e?n.createElement(o,i(i({ref:a},d),{},{components:e})):n.createElement(o,i({ref:a},d))}));function o(t,a){var e=arguments,r=a&&a.mdxType;if("string"==typeof t||r){var l=e.length,i=new Array(l);i[0]=h;var m={};for(var g in a)hasOwnProperty.call(a,g)&&(m[g]=a[g]);m.originalType=t,m[k]="string"==typeof t?t:r,i[1]=m;for(var p=2;p<l;p++)i[p]=e[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,e)}h.displayName="MDXCreateElement"},5162:(t,a,e)=>{e.d(a,{Z:()=>i});var n=e(7294),r=e(6010);const l={tabItem:"tabItem_Ymn6"};function i(t){let{children:a,hidden:e,className:i}=t;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,i),hidden:e},a)}},4866:(t,a,e)=>{e.d(a,{Z:()=>v});var n=e(7462),r=e(7294),l=e(6010),i=e(2466),m=e(6550),g=e(1980),p=e(7392),d=e(12);function k(t){return function(t){return r.Children.map(t,(t=>{if(!t||(0,r.isValidElement)(t)&&function(t){const{props:a}=t;return!!a&&"object"==typeof a&&"value"in a}(t))return t;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(t).map((t=>{let{props:{value:a,label:e,attributes:n,default:r}}=t;return{value:a,label:e,attributes:n,default:r}}))}function N(t){const{values:a,children:e}=t;return(0,r.useMemo)((()=>{const t=a??k(e);return function(t){const a=(0,p.l)(t,((t,a)=>t.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((t=>t.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(t),t}),[a,e])}function h(t){let{value:a,tabValues:e}=t;return e.some((t=>t.value===a))}function o(t){let{queryString:a=!1,groupId:e}=t;const n=(0,m.k6)(),l=function(t){let{queryString:a=!1,groupId:e}=t;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!e)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return e??null}({queryString:a,groupId:e});return[(0,g._X)(l),(0,r.useCallback)((t=>{if(!l)return;const a=new URLSearchParams(n.location.search);a.set(l,t),n.replace({...n.location,search:a.toString()})}),[l,n])]}function u(t){const{defaultValue:a,queryString:e=!1,groupId:n}=t,l=N(t),[i,m]=(0,r.useState)((()=>function(t){let{defaultValue:a,tabValues:e}=t;if(0===e.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!h({value:a,tabValues:e}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${e.map((t=>t.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const n=e.find((t=>t.default))??e[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:a,tabValues:l}))),[g,p]=o({queryString:e,groupId:n}),[k,u]=function(t){let{groupId:a}=t;const e=function(t){return t?`docusaurus.tab.${t}`:null}(a),[n,l]=(0,d.Nk)(e);return[n,(0,r.useCallback)((t=>{e&&l.set(t)}),[e,l])]}({groupId:n}),s=(()=>{const t=g??k;return h({value:t,tabValues:l})?t:null})();(0,r.useLayoutEffect)((()=>{s&&m(s)}),[s]);return{selectedValue:i,selectValue:(0,r.useCallback)((t=>{if(!h({value:t,tabValues:l}))throw new Error(`Can't select invalid tab value=${t}`);m(t),p(t),u(t)}),[p,u,l]),tabValues:l}}var s=e(2389);const c={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(t){let{className:a,block:e,selectedValue:m,selectValue:g,tabValues:p}=t;const d=[],{blockElementScrollPositionUntilNextRender:k}=(0,i.o5)(),N=t=>{const a=t.currentTarget,e=d.indexOf(a),n=p[e].value;n!==m&&(k(a),g(n))},h=t=>{let a=null;switch(t.key){case"Enter":N(t);break;case"ArrowRight":{const e=d.indexOf(t.currentTarget)+1;a=d[e]??d[0];break}case"ArrowLeft":{const e=d.indexOf(t.currentTarget)-1;a=d[e]??d[d.length-1];break}}a?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":e},a)},p.map((t=>{let{value:a,label:e,attributes:i}=t;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:m===a?0:-1,"aria-selected":m===a,key:a,ref:t=>d.push(t),onKeyDown:h,onClick:N},i,{className:(0,l.Z)("tabs__item",c.tabItem,i?.className,{"tabs__item--active":m===a})}),e??a)})))}function f(t){let{lazy:a,children:e,selectedValue:n}=t;const l=(Array.isArray(e)?e:[e]).filter(Boolean);if(a){const t=l.find((t=>t.props.value===n));return t?(0,r.cloneElement)(t,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((t,a)=>(0,r.cloneElement)(t,{key:a,hidden:t.props.value!==n}))))}function y(t){const a=u(t);return r.createElement("div",{className:(0,l.Z)("tabs-container",c.tabList)},r.createElement(b,(0,n.Z)({},t,a)),r.createElement(f,(0,n.Z)({},t,a)))}function v(t){const a=(0,s.Z)();return r.createElement(y,(0,n.Z)({key:String(a)},t))}},7714:(t,a,e)=>{e.r(a),e.d(a,{assets:()=>d,contentTitle:()=>g,default:()=>u,frontMatter:()=>m,metadata:()=>p,quartoRawHtml:()=>N,toc:()=>k});var n=e(7462),r=(e(7294),e(3905)),l=e(4866),i=e(5162);const m={title:"Timeseries",description:"Handling timeseries data.",engine:"knitr",knitr:{opts_chunk:{connection:"con","engine-opts":{target:"sql.duckdb",use_glue:!0}}},execute:{cache:!0},sidebar_position:5},g=void 0,p={unversionedId:"timeseries",id:"timeseries",title:"Timeseries",description:"Handling timeseries data.",source:"@site/docs/timeseries.md",sourceDirName:".",slug:"/timeseries",permalink:"/querying-with-prql/timeseries",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Timeseries",description:"Handling timeseries data.",engine:"knitr",knitr:{opts_chunk:{connection:"con","engine-opts":{target:"sql.duckdb",use_glue:!0}}},execute:{cache:!0},sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Reshaping and Tidy Data",permalink:"/querying-with-prql/tidy"}},d={},k=[{value:"Preparing Data",id:"preparing-data",level:2},{value:"Download",id:"download",level:3},{value:"Load the Data",id:"load-the-data",level:3},{value:"Filtering",id:"filtering",level:2},{value:"Downsampling",id:"downsampling",level:2},{value:"Upsampling",id:"upsampling",level:2},{value:"Window Functions",id:"window-functions",level:2},{value:"Moving Average, Cumurative Avarage",id:"sec-moving-ave",level:3},{value:"Combining Rolling Aggregations",id:"combining-rolling-aggregations",level:3},{value:"Timezones",id:"timezones",level:2}],N=["<div><style>\n.dataframe > thead > tr > th,\n.dataframe > tbody > tr > td {\n  text-align: right;\n}\n</style>\n<small>shape: (5, 6)</small>","</div>","<div><style>\n.dataframe > thead > tr > th,\n.dataframe > tbody > tr > td {\n  text-align: right;\n}\n</style>\n<small>shape: (5, 6)</small>","</div>","<div><style>\n.dataframe > thead > tr > th,\n.dataframe > tbody > tr > td {\n  text-align: right;\n}\n</style>\n<small>shape: (5, 6)</small>","</div>","<div><style>\n.dataframe > thead > tr > th,\n.dataframe > tbody > tr > td {\n  text-align: right;\n}\n</style>\n<small>shape: (5, 11)</small>","</div>","<div><style>\n.dataframe > thead > tr > th,\n.dataframe > tbody > tr > td {\n  text-align: right;\n}\n</style>\n<small>shape: (5, 6)</small>","</div>","<div><style>\n.dataframe > thead > tr > th,\n.dataframe > tbody > tr > td {\n  text-align: right;\n}\n</style>\n<small>shape: (5, 4)</small>","</div>","<div><style>\n.dataframe > thead > tr > th,\n.dataframe > tbody > tr > td {\n  text-align: right;\n}\n</style>\n<small>shape: (5, 3)</small>","</div>","<div><style>\n.dataframe > thead > tr > th,\n.dataframe > tbody > tr > td {\n  text-align: right;\n}\n</style>\n<small>shape: (5, 6)</small>","</div>"],h={toc:k,quartoRawHtml:N},o="wrapper";function u(t){let{components:a,...m}=t;return(0,r.kt)(o,(0,n.Z)({},h,m,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"This page is based on the chapter\n",(0,r.kt)("a",{parentName:"p",href:"https://kevinheavey.github.io/modern-polars/timeseries.html"},"\u201cTimeseries\u201d"),"\nof the Modern Polars book.")),(0,r.kt)("h2",{id:"preparing-data"},"Preparing Data"),(0,r.kt)("admonition",{type:"important"},(0,r.kt)("p",{parentName:"admonition"},"Since the PRQL and SQL results shown on this page are after being\nconverted to R DataFrame via knitr, they have been converted from DuckDB\ntypes to R types. So ",(0,r.kt)("inlineCode",{parentName:"p"},"NULL")," in DuckDB is shown as ",(0,r.kt)("inlineCode",{parentName:"p"},"NA"),".")),(0,r.kt)("h3",{id:"download"},"Download"),(0,r.kt)("p",null,"Download the data from ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md"},"Binance REST\nAPI"),"\nand write it to a Parquet file."),(0,r.kt)("p",null,"This document uses R to download the data from the source here, but we\ncan also download and use the Parquet file included in the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/kevinheavey/modern-polars/blob/master/data/ohlcv.pq"},"kevinheavey/modern-polars"),"\nGitHub repository."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"R",mdxType:"TabItem"},(0,r.kt)("details",null,(0,r.kt)("summary",null,"Code"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},'data_path <- "data/ohlcv.parquet"\n\nif (!fs::file_exists(data_path)) {\n  fs::dir_create(fs::path_dir(data_path))\n\n  .epoch_ms <- function(dt) {\n    dt |>\n      lubridate::as_datetime() |>\n      (\\(x) (as.integer(x) * 1000))()\n  }\n\n  .start <- lubridate::make_datetime(2021, 1, 1) |> .epoch_ms()\n  .end <- lubridate::make_datetime(2022, 1, 1) |> .epoch_ms()\n\n  .url <- glue::glue(\n    "https://api.binance.com/api/v3/klines?symbol=BTCUSDT&",\n    "interval=1d&startTime={.start}&endTime={.end}"\n  )\n\n  .res <- jsonlite::read_json(.url)\n\n  time_col <- "time"\n  ohlcv_cols <- c(\n    "open",\n    "high",\n    "low",\n    "close",\n    "volume"\n  )\n  cols_to_use <- c(time_col, ohlcv_cols)\n  cols <- c(cols_to_use, glue::glue("ignore_{i}", i = 1:6))\n\n  df <- .res |>\n    tibble::enframe(name = NULL) |>\n    tidyr::unnest_wider(value, names_sep = "_") |>\n    rlang::set_names({{ cols }}) |>\n    dplyr::mutate(\n      dplyr::across({{ time_col }}, \\(x) lubridate::as_datetime(x / 1000) |> lubridate::as_date()),\n      dplyr::across({{ ohlcv_cols }}, as.numeric),\n      .keep = "none"\n    )\n\n  # Unlike the Python client, the duckdb R client does not (yet) have automatic DataFrame registration.\n  # (duckdb/duckdb#6771)\n  con_tmp <- DBI::dbConnect(duckdb::duckdb(), ":memory:")\n  duckdb::duckdb_register(con_tmp, "df", df)\n  duckdb::sql(glue::glue("COPY df TO \'{data_path}\' (FORMAT PARQUET)"), con_tmp)\n  DBI::dbDisconnect(con_tmp)\n}\n')))),(0,r.kt)(i.Z,{value:"Shell",mdxType:"TabItem"},(0,r.kt)("p",null,"This is a sample command to download the Parquet file from the\n",(0,r.kt)("inlineCode",{parentName:"p"},"kevinheavey/modern-polars")," GitHub repository."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Terminal"',title:'"Terminal"'},"mkdir data\ncurl -sL https://github.com/kevinheavey/modern-polars/raw/d67d6f95ce0de8aad5492c4497ac4c3e33d696e8/data/ohlcv.pq -o data/ohlcv.parquet\n")))),(0,r.kt)("h3",{id:"load-the-data"},"Load the Data"),(0,r.kt)("p",null,"After the Parquet file is ready, load that into DuckDB (in-memory)\ndatabase table, R DataFrame, and Python polars.LazyFrame."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"DuckDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE tab AS FROM 'data/ohlcv.parquet'\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"FROM tab\nLIMIT 5\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time"),(0,r.kt)("th",{parentName:"tr",align:"right"},"open"),(0,r.kt)("th",{parentName:"tr",align:"right"},"high"),(0,r.kt)("th",{parentName:"tr",align:"right"},"low"),(0,r.kt)("th",{parentName:"tr",align:"right"},"close"),(0,r.kt)("th",{parentName:"tr",align:"right"},"volume"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28923.63"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29600.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28624.57"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29331.69"),(0,r.kt)("td",{parentName:"tr",align:"right"},"54182.93")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-02"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29331.70"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33300.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28946.53"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32178.33"),(0,r.kt)("td",{parentName:"tr",align:"right"},"129993.87")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-03"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32176.45"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34778.11"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31962.99"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33000.05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"120957.57")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-04"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33000.05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33600.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28130.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31988.71"),(0,r.kt)("td",{parentName:"tr",align:"right"},"140899.89")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31989.75"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34360.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29900.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33949.53"),(0,r.kt)("td",{parentName:"tr",align:"right"},"116050.00"))))),(0,r.kt)(i.Z,{value:"R DataFrame",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},"library(dplyr, warn.conflicts = FALSE)\n\ndf <- duckdb::sql(\"FROM 'data/ohlcv.parquet'\")\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},"df |> head(5)\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time"),(0,r.kt)("th",{parentName:"tr",align:"right"},"open"),(0,r.kt)("th",{parentName:"tr",align:"right"},"high"),(0,r.kt)("th",{parentName:"tr",align:"right"},"low"),(0,r.kt)("th",{parentName:"tr",align:"right"},"close"),(0,r.kt)("th",{parentName:"tr",align:"right"},"volume"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28923.63"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29600.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28624.57"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29331.69"),(0,r.kt)("td",{parentName:"tr",align:"right"},"54182.93")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-02"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29331.70"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33300.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28946.53"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32178.33"),(0,r.kt)("td",{parentName:"tr",align:"right"},"129993.87")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-03"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32176.45"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34778.11"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31962.99"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33000.05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"120957.57")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-04"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33000.05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33600.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28130.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31988.71"),(0,r.kt)("td",{parentName:"tr",align:"right"},"140899.89")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31989.75"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34360.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29900.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33949.53"),(0,r.kt)("td",{parentName:"tr",align:"right"},"116050.00"))))),(0,r.kt)(i.Z,{value:"Python polars.LazyFrame",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import polars as pl\n\nlf = pl.scan_parquet("data/ohlcv.parquet")\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"lf.fetch(5)\n")),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:N[0]}}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"time"),(0,r.kt)("th",{parentName:"tr",align:null},"open"),(0,r.kt)("th",{parentName:"tr",align:null},"high"),(0,r.kt)("th",{parentName:"tr",align:null},"low"),(0,r.kt)("th",{parentName:"tr",align:null},"close"),(0,r.kt)("th",{parentName:"tr",align:null},"volume"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"date"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-01"),(0,r.kt)("td",{parentName:"tr",align:null},"28923.63"),(0,r.kt)("td",{parentName:"tr",align:null},"29600.0"),(0,r.kt)("td",{parentName:"tr",align:null},"28624.57"),(0,r.kt)("td",{parentName:"tr",align:null},"29331.69"),(0,r.kt)("td",{parentName:"tr",align:null},"54182.925011")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-02"),(0,r.kt)("td",{parentName:"tr",align:null},"29331.7"),(0,r.kt)("td",{parentName:"tr",align:null},"33300.0"),(0,r.kt)("td",{parentName:"tr",align:null},"28946.53"),(0,r.kt)("td",{parentName:"tr",align:null},"32178.33"),(0,r.kt)("td",{parentName:"tr",align:null},"129993.873362")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-03"),(0,r.kt)("td",{parentName:"tr",align:null},"32176.45"),(0,r.kt)("td",{parentName:"tr",align:null},"34778.11"),(0,r.kt)("td",{parentName:"tr",align:null},"31962.99"),(0,r.kt)("td",{parentName:"tr",align:null},"33000.05"),(0,r.kt)("td",{parentName:"tr",align:null},"120957.56675")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-04"),(0,r.kt)("td",{parentName:"tr",align:null},"33000.05"),(0,r.kt)("td",{parentName:"tr",align:null},"33600.0"),(0,r.kt)("td",{parentName:"tr",align:null},"28130.0"),(0,r.kt)("td",{parentName:"tr",align:null},"31988.71"),(0,r.kt)("td",{parentName:"tr",align:null},"140899.88569")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-05"),(0,r.kt)("td",{parentName:"tr",align:null},"31989.75"),(0,r.kt)("td",{parentName:"tr",align:null},"34360.0"),(0,r.kt)("td",{parentName:"tr",align:null},"29900.0"),(0,r.kt)("td",{parentName:"tr",align:null},"33949.53"),(0,r.kt)("td",{parentName:"tr",align:null},"116049.997038")))),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:N[1]}}))),(0,r.kt)("h2",{id:"filtering"},"Filtering"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"PRQL DuckDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elm"},"from tab\nfilter s\"date_part(['year', 'month'], time) = {{year: 2021, month: 2}}\"\ntake 5\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time"),(0,r.kt)("th",{parentName:"tr",align:"right"},"open"),(0,r.kt)("th",{parentName:"tr",align:"right"},"high"),(0,r.kt)("th",{parentName:"tr",align:"right"},"low"),(0,r.kt)("th",{parentName:"tr",align:"right"},"close"),(0,r.kt)("th",{parentName:"tr",align:"right"},"volume"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-02-01"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33092.97"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34717.27"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32296.16"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33526.37"),(0,r.kt)("td",{parentName:"tr",align:"right"},"82718.28")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-02-02"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33517.09"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35984.33"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33418.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35466.24"),(0,r.kt)("td",{parentName:"tr",align:"right"},"78056.66")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-02-03"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35472.71"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37662.63"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35362.38"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37618.87"),(0,r.kt)("td",{parentName:"tr",align:"right"},"80784.33")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-02-04"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37620.26"),(0,r.kt)("td",{parentName:"tr",align:"right"},"38708.27"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36161.95"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36936.66"),(0,r.kt)("td",{parentName:"tr",align:"right"},"92080.74")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-02-05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36936.65"),(0,r.kt)("td",{parentName:"tr",align:"right"},"38310.12"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36570.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"38290.24"),(0,r.kt)("td",{parentName:"tr",align:"right"},"66681.33"))))),(0,r.kt)(i.Z,{value:"SQL DuckDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"FROM tab\nWHERE date_part(['year', 'month'], time) = {year: 2021, month: 2}\nLIMIT 5\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time"),(0,r.kt)("th",{parentName:"tr",align:"right"},"open"),(0,r.kt)("th",{parentName:"tr",align:"right"},"high"),(0,r.kt)("th",{parentName:"tr",align:"right"},"low"),(0,r.kt)("th",{parentName:"tr",align:"right"},"close"),(0,r.kt)("th",{parentName:"tr",align:"right"},"volume"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-02-01"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33092.97"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34717.27"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32296.16"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33526.37"),(0,r.kt)("td",{parentName:"tr",align:"right"},"82718.28")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-02-02"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33517.09"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35984.33"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33418.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35466.24"),(0,r.kt)("td",{parentName:"tr",align:"right"},"78056.66")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-02-03"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35472.71"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37662.63"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35362.38"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37618.87"),(0,r.kt)("td",{parentName:"tr",align:"right"},"80784.33")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-02-04"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37620.26"),(0,r.kt)("td",{parentName:"tr",align:"right"},"38708.27"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36161.95"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36936.66"),(0,r.kt)("td",{parentName:"tr",align:"right"},"92080.74")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-02-05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36936.65"),(0,r.kt)("td",{parentName:"tr",align:"right"},"38310.12"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36570.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"38290.24"),(0,r.kt)("td",{parentName:"tr",align:"right"},"66681.33"))))),(0,r.kt)(i.Z,{value:"dplyr R",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},'df |>\n  filter(\n    lubridate::floor_date(time, "month") == lubridate::make_datetime(2021, 2)\n  ) |>\n  head(5)\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time"),(0,r.kt)("th",{parentName:"tr",align:"right"},"open"),(0,r.kt)("th",{parentName:"tr",align:"right"},"high"),(0,r.kt)("th",{parentName:"tr",align:"right"},"low"),(0,r.kt)("th",{parentName:"tr",align:"right"},"close"),(0,r.kt)("th",{parentName:"tr",align:"right"},"volume"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-02-01"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33092.97"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34717.27"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32296.16"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33526.37"),(0,r.kt)("td",{parentName:"tr",align:"right"},"82718.28")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-02-02"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33517.09"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35984.33"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33418.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35466.24"),(0,r.kt)("td",{parentName:"tr",align:"right"},"78056.66")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-02-03"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35472.71"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37662.63"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35362.38"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37618.87"),(0,r.kt)("td",{parentName:"tr",align:"right"},"80784.33")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-02-04"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37620.26"),(0,r.kt)("td",{parentName:"tr",align:"right"},"38708.27"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36161.95"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36936.66"),(0,r.kt)("td",{parentName:"tr",align:"right"},"92080.74")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-02-05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36936.65"),(0,r.kt)("td",{parentName:"tr",align:"right"},"38310.12"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36570.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"38290.24"),(0,r.kt)("td",{parentName:"tr",align:"right"},"66681.33"))))),(0,r.kt)(i.Z,{value:"Python Polars",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'(\n    lf.filter((pl.col("time").dt.year() == 2021) & (pl.col("time").dt.month() == 2))\n    .head(5)\n    .collect()\n)\n')),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:N[2]}}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"time"),(0,r.kt)("th",{parentName:"tr",align:null},"open"),(0,r.kt)("th",{parentName:"tr",align:null},"high"),(0,r.kt)("th",{parentName:"tr",align:null},"low"),(0,r.kt)("th",{parentName:"tr",align:null},"close"),(0,r.kt)("th",{parentName:"tr",align:null},"volume"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"date"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-02-01"),(0,r.kt)("td",{parentName:"tr",align:null},"33092.97"),(0,r.kt)("td",{parentName:"tr",align:null},"34717.27"),(0,r.kt)("td",{parentName:"tr",align:null},"32296.16"),(0,r.kt)("td",{parentName:"tr",align:null},"33526.37"),(0,r.kt)("td",{parentName:"tr",align:null},"82718.276882")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-02-02"),(0,r.kt)("td",{parentName:"tr",align:null},"33517.09"),(0,r.kt)("td",{parentName:"tr",align:null},"35984.33"),(0,r.kt)("td",{parentName:"tr",align:null},"33418.0"),(0,r.kt)("td",{parentName:"tr",align:null},"35466.24"),(0,r.kt)("td",{parentName:"tr",align:null},"78056.65988")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-02-03"),(0,r.kt)("td",{parentName:"tr",align:null},"35472.71"),(0,r.kt)("td",{parentName:"tr",align:null},"37662.63"),(0,r.kt)("td",{parentName:"tr",align:null},"35362.38"),(0,r.kt)("td",{parentName:"tr",align:null},"37618.87"),(0,r.kt)("td",{parentName:"tr",align:null},"80784.333663")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-02-04"),(0,r.kt)("td",{parentName:"tr",align:null},"37620.26"),(0,r.kt)("td",{parentName:"tr",align:null},"38708.27"),(0,r.kt)("td",{parentName:"tr",align:null},"36161.95"),(0,r.kt)("td",{parentName:"tr",align:null},"36936.66"),(0,r.kt)("td",{parentName:"tr",align:null},"92080.735898")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-02-05"),(0,r.kt)("td",{parentName:"tr",align:null},"36936.65"),(0,r.kt)("td",{parentName:"tr",align:null},"38310.12"),(0,r.kt)("td",{parentName:"tr",align:null},"36570.0"),(0,r.kt)("td",{parentName:"tr",align:null},"38290.24"),(0,r.kt)("td",{parentName:"tr",align:null},"66681.334275")))),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:N[3]}}))),(0,r.kt)("h2",{id:"downsampling"},"Downsampling"),(0,r.kt)("p",null,"It is important to note carefully how units such as ",(0,r.kt)("inlineCode",{parentName:"p"},"5 days")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"1 week"),"\nactually work. In other words, where to start counting ",(0,r.kt)("inlineCode",{parentName:"p"},"5 days")," or\n",(0,r.kt)("inlineCode",{parentName:"p"},"1 week")," could be completely different in each system."),(0,r.kt)("p",null,"Here, we should note that ",(0,r.kt)("inlineCode",{parentName:"p"},"time_bucket")," in DuckDB,\n",(0,r.kt)("inlineCode",{parentName:"p"},"lubridate::floor_date")," in R, and ",(0,r.kt)("inlineCode",{parentName:"p"},"groupby_dynamic")," in Polars have\ncompletely different initial starting points by default."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The DuckDB function ",(0,r.kt)("inlineCode",{parentName:"p"},"time_bucket"),"\u2019s origin defaults to\n",(0,r.kt)("inlineCode",{parentName:"p"},"2000-01-03 00:00:00+00")," for days or weeks interval.",(0,r.kt)("sup",{parentName:"p",id:"fnref-1"},(0,r.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In the R ",(0,r.kt)("inlineCode",{parentName:"p"},"lubridate::floor_date")," function, timestamp is floored\nusing the number of days elapsed since the beginning of every month\nwhen specifying ",(0,r.kt)("inlineCode",{parentName:"p"},'"5 days"')," to the ",(0,r.kt)("inlineCode",{parentName:"p"},"unit")," argument."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-r"},'lubridate::as_date(c("2023-01-31", "2023-02-01")) |>\n  lubridate::floor_date("5 days")\n')),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-text"},'[1] "2023-01-31" "2023-02-01"\n')),(0,r.kt)("p",{parentName:"li"},"And when ",(0,r.kt)("inlineCode",{parentName:"p"},'"1 week"')," to the ",(0,r.kt)("inlineCode",{parentName:"p"},"unit")," argument, it is floored to the\nnearest week, Sunday through Saturday."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-r"},'lubridate::as_date(c("2023-01-31", "2023-02-01")) |>\n  lubridate::floor_date("1 week")\n')),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-text"},'[1] "2023-01-29" "2023-01-29"\n')),(0,r.kt)("p",{parentName:"li"},"To start from an arbitrary origin, all breaks must be specified as a\nvector in the unit argument.",(0,r.kt)("sup",{parentName:"p",id:"fnref-2"},(0,r.kt)("a",{parentName:"sup",href:"#fn-2",className:"footnote-ref"},"2"))),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-r"},'lubridate::as_date(c("2023-01-31", "2023-02-01")) |>\n  lubridate::floor_date(lubridate::make_date(2023, 1, 31))\n')),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-text"},'[1] "2023-01-31" "2023-01-31"\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"groupby_dynamic")," of Polars, the ",(0,r.kt)("inlineCode",{parentName:"p"},"offset")," parameter to specify the\norigin point, is negative ",(0,r.kt)("inlineCode",{parentName:"p"},"every")," by default.",(0,r.kt)("sup",{parentName:"p",id:"fnref-3"},(0,r.kt)("a",{parentName:"sup",href:"#fn-3",className:"footnote-ref"},"3"))))),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"PRQL DuckDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elm"},'from tab\nderive [\n  time_new = s"""\n    time_bucket(INTERVAL \'5 days\', time, (FROM tab SELECT min(time)))\n  """\n]\ngroup [time_new] (\n  aggregate [\n    open = average open,\n    high = average high,\n    low = average low,\n    close = average close,\n    volume = average volume\n  ]\n)\nsort time_new\ntake 5\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time_new"),(0,r.kt)("th",{parentName:"tr",align:"right"},"open"),(0,r.kt)("th",{parentName:"tr",align:"right"},"high"),(0,r.kt)("th",{parentName:"tr",align:"right"},"low"),(0,r.kt)("th",{parentName:"tr",align:"right"},"close"),(0,r.kt)("th",{parentName:"tr",align:"right"},"volume"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31084.32"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33127.62"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29512.82"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32089.66"),(0,r.kt)("td",{parentName:"tr",align:"right"},"112416.85")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-06"),(0,r.kt)("td",{parentName:"tr",align:"right"},"38165.31"),(0,r.kt)("td",{parentName:"tr",align:"right"},"40396.84"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35983.82"),(0,r.kt)("td",{parentName:"tr",align:"right"},"39004.54"),(0,r.kt)("td",{parentName:"tr",align:"right"},"118750.08")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-11"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36825.23"),(0,r.kt)("td",{parentName:"tr",align:"right"},"38518.10"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33288.05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36542.76"),(0,r.kt)("td",{parentName:"tr",align:"right"},"146166.70")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-16"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36216.36"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37307.53"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34650.37"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35962.92"),(0,r.kt)("td",{parentName:"tr",align:"right"},"81236.80")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-21"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32721.53"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34165.71"),(0,r.kt)("td",{parentName:"tr",align:"right"},"30624.23"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32077.48"),(0,r.kt)("td",{parentName:"tr",align:"right"},"97809.66"))))),(0,r.kt)(i.Z,{value:"SQL DuckDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"WITH _tab1 AS (\n  FROM tab\n  SELECT\n    * REPLACE (time_bucket(INTERVAL '5 days', time, (FROM tab SELECT min(time)))) AS time\n)\n\nFROM _tab1\nSELECT\n  time,\n  avg(COLUMNS(x -> x NOT IN ('_tab1.\"time\"')))\nGROUP BY time\nORDER BY time\nLIMIT 5\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time"),(0,r.kt)("th",{parentName:"tr",align:"right"},"avg(","_","tab1.open)"),(0,r.kt)("th",{parentName:"tr",align:"right"},"avg(","_","tab1.high)"),(0,r.kt)("th",{parentName:"tr",align:"right"},"avg(","_","tab1.low)"),(0,r.kt)("th",{parentName:"tr",align:"right"},"avg(","_","tab1.\u201dclose\u201d)"),(0,r.kt)("th",{parentName:"tr",align:"right"},"avg(","_","tab1.volume)"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31084.32"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33127.62"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29512.82"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32089.66"),(0,r.kt)("td",{parentName:"tr",align:"right"},"112416.85")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-06"),(0,r.kt)("td",{parentName:"tr",align:"right"},"38165.31"),(0,r.kt)("td",{parentName:"tr",align:"right"},"40396.84"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35983.82"),(0,r.kt)("td",{parentName:"tr",align:"right"},"39004.54"),(0,r.kt)("td",{parentName:"tr",align:"right"},"118750.08")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-11"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36825.23"),(0,r.kt)("td",{parentName:"tr",align:"right"},"38518.10"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33288.05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36542.76"),(0,r.kt)("td",{parentName:"tr",align:"right"},"146166.70")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-16"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36216.36"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37307.53"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34650.37"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35962.92"),(0,r.kt)("td",{parentName:"tr",align:"right"},"81236.80")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-21"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32721.53"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34165.71"),(0,r.kt)("td",{parentName:"tr",align:"right"},"30624.23"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32077.48"),(0,r.kt)("td",{parentName:"tr",align:"right"},"97809.66"))))),(0,r.kt)(i.Z,{value:"dplyr R",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},"df |>\n  mutate(\n    time = time |>\n      (\\(x) lubridate::floor_date(x, seq(min(x), max(x), by = 5)))()\n  ) |>\n  summarise(across(everything(), mean), .by = time) |>\n  head(5)\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time"),(0,r.kt)("th",{parentName:"tr",align:"right"},"open"),(0,r.kt)("th",{parentName:"tr",align:"right"},"high"),(0,r.kt)("th",{parentName:"tr",align:"right"},"low"),(0,r.kt)("th",{parentName:"tr",align:"right"},"close"),(0,r.kt)("th",{parentName:"tr",align:"right"},"volume"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31084.32"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33127.62"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29512.82"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32089.66"),(0,r.kt)("td",{parentName:"tr",align:"right"},"112416.85")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-06"),(0,r.kt)("td",{parentName:"tr",align:"right"},"38165.31"),(0,r.kt)("td",{parentName:"tr",align:"right"},"40396.84"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35983.82"),(0,r.kt)("td",{parentName:"tr",align:"right"},"39004.54"),(0,r.kt)("td",{parentName:"tr",align:"right"},"118750.08")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-11"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36825.23"),(0,r.kt)("td",{parentName:"tr",align:"right"},"38518.10"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33288.05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36542.76"),(0,r.kt)("td",{parentName:"tr",align:"right"},"146166.70")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-16"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36216.36"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37307.53"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34650.37"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35962.92"),(0,r.kt)("td",{parentName:"tr",align:"right"},"81236.80")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-21"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32721.53"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34165.71"),(0,r.kt)("td",{parentName:"tr",align:"right"},"30624.23"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32077.48"),(0,r.kt)("td",{parentName:"tr",align:"right"},"97809.66"))))),(0,r.kt)(i.Z,{value:"Python Polars",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'(\n    lf.groupby_dynamic("time", every="5d")\n    .agg(pl.col(pl.Float64).mean())\n    .head(5)\n    .collect()\n)\n')),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:N[4]}}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"time"),(0,r.kt)("th",{parentName:"tr",align:null},"open"),(0,r.kt)("th",{parentName:"tr",align:null},"high"),(0,r.kt)("th",{parentName:"tr",align:null},"low"),(0,r.kt)("th",{parentName:"tr",align:null},"close"),(0,r.kt)("th",{parentName:"tr",align:null},"volume"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"date"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-01"),(0,r.kt)("td",{parentName:"tr",align:null},"31084.316"),(0,r.kt)("td",{parentName:"tr",align:null},"33127.622"),(0,r.kt)("td",{parentName:"tr",align:null},"29512.818"),(0,r.kt)("td",{parentName:"tr",align:null},"32089.662"),(0,r.kt)("td",{parentName:"tr",align:null},"112416.84957")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-06"),(0,r.kt)("td",{parentName:"tr",align:null},"38165.31"),(0,r.kt)("td",{parentName:"tr",align:null},"40396.842"),(0,r.kt)("td",{parentName:"tr",align:null},"35983.822"),(0,r.kt)("td",{parentName:"tr",align:null},"39004.538"),(0,r.kt)("td",{parentName:"tr",align:null},"118750.076685")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-11"),(0,r.kt)("td",{parentName:"tr",align:null},"36825.226"),(0,r.kt)("td",{parentName:"tr",align:null},"38518.1"),(0,r.kt)("td",{parentName:"tr",align:null},"33288.046"),(0,r.kt)("td",{parentName:"tr",align:null},"36542.762"),(0,r.kt)("td",{parentName:"tr",align:null},"146166.703112")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-16"),(0,r.kt)("td",{parentName:"tr",align:null},"36216.36"),(0,r.kt)("td",{parentName:"tr",align:null},"37307.528"),(0,r.kt)("td",{parentName:"tr",align:null},"34650.372"),(0,r.kt)("td",{parentName:"tr",align:null},"35962.916"),(0,r.kt)("td",{parentName:"tr",align:null},"81236.801666")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-21"),(0,r.kt)("td",{parentName:"tr",align:null},"32721.534"),(0,r.kt)("td",{parentName:"tr",align:null},"34165.706"),(0,r.kt)("td",{parentName:"tr",align:null},"30624.232"),(0,r.kt)("td",{parentName:"tr",align:null},"32077.48"),(0,r.kt)("td",{parentName:"tr",align:null},"97809.662654")))),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:N[5]}}))),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"PRQL DuckDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elm"},'from tab\nderive [\n  time_new = s"""\n    time_bucket(INTERVAL \'7 days\', time, (FROM tab SELECT min(time)))\n  """\n]\ngroup [time_new] (\n  aggregate [\n    open_mean = average open,\n    high_mean = average high,\n    low_mean = average low,\n    close_mean = average close,\n    volume_mean = average volume,\n    open_sum = sum open,\n    high_sum = sum high,\n    low_sum = sum low,\n    close_sum = sum close,\n    volume_sum = sum volume\n  ]\n)\nsort time_new\ntake 5\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time_new"),(0,r.kt)("th",{parentName:"tr",align:"right"},"open_mean"),(0,r.kt)("th",{parentName:"tr",align:"right"},"high_mean"),(0,r.kt)("th",{parentName:"tr",align:"right"},"low_mean"),(0,r.kt)("th",{parentName:"tr",align:"right"},"close_mean"),(0,r.kt)("th",{parentName:"tr",align:"right"},"volume_mean"),(0,r.kt)("th",{parentName:"tr",align:"right"},"open_sum"),(0,r.kt)("th",{parentName:"tr",align:"right"},"high_sum"),(0,r.kt)("th",{parentName:"tr",align:"right"},"low_sum"),(0,r.kt)("th",{parentName:"tr",align:"right"},"close_sum"),(0,r.kt)("th",{parentName:"tr",align:"right"},"volume_sum"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32305.78"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34706.05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31021.73"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33807.14"),(0,r.kt)("td",{parentName:"tr",align:"right"},"117435.59"),(0,r.kt)("td",{parentName:"tr",align:"right"},"226140.5"),(0,r.kt)("td",{parentName:"tr",align:"right"},"242942.3"),(0,r.kt)("td",{parentName:"tr",align:"right"},"217152.1"),(0,r.kt)("td",{parentName:"tr",align:"right"},"236650.0"),(0,r.kt)("td",{parentName:"tr",align:"right"},"822049.1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-08"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37869.80"),(0,r.kt)("td",{parentName:"tr",align:"right"},"39646.11"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34623.33"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37827.52"),(0,r.kt)("td",{parentName:"tr",align:"right"},"135188.30"),(0,r.kt)("td",{parentName:"tr",align:"right"},"265088.6"),(0,r.kt)("td",{parentName:"tr",align:"right"},"277522.7"),(0,r.kt)("td",{parentName:"tr",align:"right"},"242363.3"),(0,r.kt)("td",{parentName:"tr",align:"right"},"264792.6"),(0,r.kt)("td",{parentName:"tr",align:"right"},"946318.1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-15"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36527.89"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37412.20"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33961.55"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35343.85"),(0,r.kt)("td",{parentName:"tr",align:"right"},"94212.72"),(0,r.kt)("td",{parentName:"tr",align:"right"},"255695.2"),(0,r.kt)("td",{parentName:"tr",align:"right"},"261885.4"),(0,r.kt)("td",{parentName:"tr",align:"right"},"237730.9"),(0,r.kt)("td",{parentName:"tr",align:"right"},"247406.9"),(0,r.kt)("td",{parentName:"tr",align:"right"},"659489.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-22"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31888.55"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33498.81"),(0,r.kt)("td",{parentName:"tr",align:"right"},"30424.48"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32248.01"),(0,r.kt)("td",{parentName:"tr",align:"right"},"89649.94"),(0,r.kt)("td",{parentName:"tr",align:"right"},"223219.8"),(0,r.kt)("td",{parentName:"tr",align:"right"},"234491.7"),(0,r.kt)("td",{parentName:"tr",align:"right"},"212971.4"),(0,r.kt)("td",{parentName:"tr",align:"right"},"225736.0"),(0,r.kt)("td",{parentName:"tr",align:"right"},"627549.6")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-29"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34511.48"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36411.44"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33450.08"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35022.31"),(0,r.kt)("td",{parentName:"tr",align:"right"},"102728.42"),(0,r.kt)("td",{parentName:"tr",align:"right"},"241580.4"),(0,r.kt)("td",{parentName:"tr",align:"right"},"254880.1"),(0,r.kt)("td",{parentName:"tr",align:"right"},"234150.6"),(0,r.kt)("td",{parentName:"tr",align:"right"},"245156.2"),(0,r.kt)("td",{parentName:"tr",align:"right"},"719099.0"))))),(0,r.kt)(i.Z,{value:"SQL DukcDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"WITH _tab1 AS (\n  FROM tab\n  SELECT\n    * REPLACE (time_bucket(INTERVAL '7 days', time, (FROM tab SELECT min(time)))) AS time\n)\n\nFROM _tab1\nSELECT\n  time,\n  avg(COLUMNS(x -> x NOT IN ('_tab1.\"time\"'))),\n  sum(COLUMNS(x -> x NOT IN ('_tab1.\"time\"')))\nGROUP BY time\nORDER BY time\nLIMIT 5\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time"),(0,r.kt)("th",{parentName:"tr",align:"right"},"avg(","_","tab1.open)"),(0,r.kt)("th",{parentName:"tr",align:"right"},"avg(","_","tab1.high)"),(0,r.kt)("th",{parentName:"tr",align:"right"},"avg(","_","tab1.low)"),(0,r.kt)("th",{parentName:"tr",align:"right"},"avg(","_","tab1.\u201dclose\u201d)"),(0,r.kt)("th",{parentName:"tr",align:"right"},"avg(","_","tab1.volume)"),(0,r.kt)("th",{parentName:"tr",align:"right"},"sum(","_","tab1.open)"),(0,r.kt)("th",{parentName:"tr",align:"right"},"sum(","_","tab1.high)"),(0,r.kt)("th",{parentName:"tr",align:"right"},"sum(","_","tab1.low)"),(0,r.kt)("th",{parentName:"tr",align:"right"},"sum(","_","tab1.\u201dclose\u201d)"),(0,r.kt)("th",{parentName:"tr",align:"right"},"sum(","_","tab1.volume)"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32305.78"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34706.05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31021.73"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33807.14"),(0,r.kt)("td",{parentName:"tr",align:"right"},"117435.59"),(0,r.kt)("td",{parentName:"tr",align:"right"},"226140.5"),(0,r.kt)("td",{parentName:"tr",align:"right"},"242942.3"),(0,r.kt)("td",{parentName:"tr",align:"right"},"217152.1"),(0,r.kt)("td",{parentName:"tr",align:"right"},"236650.0"),(0,r.kt)("td",{parentName:"tr",align:"right"},"822049.1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-08"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37869.80"),(0,r.kt)("td",{parentName:"tr",align:"right"},"39646.11"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34623.33"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37827.52"),(0,r.kt)("td",{parentName:"tr",align:"right"},"135188.30"),(0,r.kt)("td",{parentName:"tr",align:"right"},"265088.6"),(0,r.kt)("td",{parentName:"tr",align:"right"},"277522.7"),(0,r.kt)("td",{parentName:"tr",align:"right"},"242363.3"),(0,r.kt)("td",{parentName:"tr",align:"right"},"264792.6"),(0,r.kt)("td",{parentName:"tr",align:"right"},"946318.1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-15"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36527.89"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37412.20"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33961.55"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35343.85"),(0,r.kt)("td",{parentName:"tr",align:"right"},"94212.72"),(0,r.kt)("td",{parentName:"tr",align:"right"},"255695.2"),(0,r.kt)("td",{parentName:"tr",align:"right"},"261885.4"),(0,r.kt)("td",{parentName:"tr",align:"right"},"237730.9"),(0,r.kt)("td",{parentName:"tr",align:"right"},"247406.9"),(0,r.kt)("td",{parentName:"tr",align:"right"},"659489.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-22"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31888.55"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33498.81"),(0,r.kt)("td",{parentName:"tr",align:"right"},"30424.48"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32248.01"),(0,r.kt)("td",{parentName:"tr",align:"right"},"89649.94"),(0,r.kt)("td",{parentName:"tr",align:"right"},"223219.8"),(0,r.kt)("td",{parentName:"tr",align:"right"},"234491.7"),(0,r.kt)("td",{parentName:"tr",align:"right"},"212971.4"),(0,r.kt)("td",{parentName:"tr",align:"right"},"225736.0"),(0,r.kt)("td",{parentName:"tr",align:"right"},"627549.6")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-29"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34511.48"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36411.44"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33450.08"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35022.31"),(0,r.kt)("td",{parentName:"tr",align:"right"},"102728.42"),(0,r.kt)("td",{parentName:"tr",align:"right"},"241580.4"),(0,r.kt)("td",{parentName:"tr",align:"right"},"254880.1"),(0,r.kt)("td",{parentName:"tr",align:"right"},"234150.6"),(0,r.kt)("td",{parentName:"tr",align:"right"},"245156.2"),(0,r.kt)("td",{parentName:"tr",align:"right"},"719099.0"))))),(0,r.kt)(i.Z,{value:"dplyr R",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},'df |>\n  mutate(\n    time = time |>\n      (\\(x) lubridate::floor_date(x, seq(min(x), max(x), by = 7)))()\n  ) |>\n  summarise(\n    across(\n      everything(),\n      list(mean = mean, sum = sum),\n      .names = "{.col}_{.fn}"\n    ),\n    .by = time\n  ) |>\n  head(5)\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time"),(0,r.kt)("th",{parentName:"tr",align:"right"},"open_mean"),(0,r.kt)("th",{parentName:"tr",align:"right"},"open_sum"),(0,r.kt)("th",{parentName:"tr",align:"right"},"high_mean"),(0,r.kt)("th",{parentName:"tr",align:"right"},"high_sum"),(0,r.kt)("th",{parentName:"tr",align:"right"},"low_mean"),(0,r.kt)("th",{parentName:"tr",align:"right"},"low_sum"),(0,r.kt)("th",{parentName:"tr",align:"right"},"close_mean"),(0,r.kt)("th",{parentName:"tr",align:"right"},"close_sum"),(0,r.kt)("th",{parentName:"tr",align:"right"},"volume_mean"),(0,r.kt)("th",{parentName:"tr",align:"right"},"volume_sum"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32305.78"),(0,r.kt)("td",{parentName:"tr",align:"right"},"226140.5"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34706.05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"242942.3"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31021.73"),(0,r.kt)("td",{parentName:"tr",align:"right"},"217152.1"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33807.14"),(0,r.kt)("td",{parentName:"tr",align:"right"},"236650.0"),(0,r.kt)("td",{parentName:"tr",align:"right"},"117435.59"),(0,r.kt)("td",{parentName:"tr",align:"right"},"822049.1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-08"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37869.80"),(0,r.kt)("td",{parentName:"tr",align:"right"},"265088.6"),(0,r.kt)("td",{parentName:"tr",align:"right"},"39646.11"),(0,r.kt)("td",{parentName:"tr",align:"right"},"277522.7"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34623.33"),(0,r.kt)("td",{parentName:"tr",align:"right"},"242363.3"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37827.52"),(0,r.kt)("td",{parentName:"tr",align:"right"},"264792.6"),(0,r.kt)("td",{parentName:"tr",align:"right"},"135188.30"),(0,r.kt)("td",{parentName:"tr",align:"right"},"946318.1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-15"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36527.89"),(0,r.kt)("td",{parentName:"tr",align:"right"},"255695.2"),(0,r.kt)("td",{parentName:"tr",align:"right"},"37412.20"),(0,r.kt)("td",{parentName:"tr",align:"right"},"261885.4"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33961.55"),(0,r.kt)("td",{parentName:"tr",align:"right"},"237730.9"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35343.85"),(0,r.kt)("td",{parentName:"tr",align:"right"},"247406.9"),(0,r.kt)("td",{parentName:"tr",align:"right"},"94212.72"),(0,r.kt)("td",{parentName:"tr",align:"right"},"659489.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-22"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31888.55"),(0,r.kt)("td",{parentName:"tr",align:"right"},"223219.8"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33498.81"),(0,r.kt)("td",{parentName:"tr",align:"right"},"234491.7"),(0,r.kt)("td",{parentName:"tr",align:"right"},"30424.48"),(0,r.kt)("td",{parentName:"tr",align:"right"},"212971.4"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32248.01"),(0,r.kt)("td",{parentName:"tr",align:"right"},"225736.0"),(0,r.kt)("td",{parentName:"tr",align:"right"},"89649.94"),(0,r.kt)("td",{parentName:"tr",align:"right"},"627549.6")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-29"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34511.48"),(0,r.kt)("td",{parentName:"tr",align:"right"},"241580.4"),(0,r.kt)("td",{parentName:"tr",align:"right"},"36411.44"),(0,r.kt)("td",{parentName:"tr",align:"right"},"254880.1"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33450.08"),(0,r.kt)("td",{parentName:"tr",align:"right"},"234150.6"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35022.31"),(0,r.kt)("td",{parentName:"tr",align:"right"},"245156.2"),(0,r.kt)("td",{parentName:"tr",align:"right"},"102728.42"),(0,r.kt)("td",{parentName:"tr",align:"right"},"719099.0"))))),(0,r.kt)(i.Z,{value:"Python Polars",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'(\n    lf.groupby_dynamic("time", every="1w")\n    .agg(\n        [\n            pl.col(pl.Float64).mean().suffix("_mean"),\n            pl.col(pl.Float64).sum().suffix("_sum"),\n        ]\n    )\n    .head(5)\n    .collect()\n)\n')),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:N[6]}}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"time"),(0,r.kt)("th",{parentName:"tr",align:null},"open_mean"),(0,r.kt)("th",{parentName:"tr",align:null},"high_mean"),(0,r.kt)("th",{parentName:"tr",align:null},"low_mean"),(0,r.kt)("th",{parentName:"tr",align:null},"close_mean"),(0,r.kt)("th",{parentName:"tr",align:null},"volume_mean"),(0,r.kt)("th",{parentName:"tr",align:null},"open_sum"),(0,r.kt)("th",{parentName:"tr",align:null},"high_sum"),(0,r.kt)("th",{parentName:"tr",align:null},"low_sum"),(0,r.kt)("th",{parentName:"tr",align:null},"close_sum"),(0,r.kt)("th",{parentName:"tr",align:null},"volume_sum"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"date"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-01"),(0,r.kt)("td",{parentName:"tr",align:null},"32305.781429"),(0,r.kt)("td",{parentName:"tr",align:null},"34706.045714"),(0,r.kt)("td",{parentName:"tr",align:null},"31021.727143"),(0,r.kt)("td",{parentName:"tr",align:null},"33807.135714"),(0,r.kt)("td",{parentName:"tr",align:null},"117435.5928"),(0,r.kt)("td",{parentName:"tr",align:null},"226140.47"),(0,r.kt)("td",{parentName:"tr",align:null},"242942.32"),(0,r.kt)("td",{parentName:"tr",align:null},"217152.09"),(0,r.kt)("td",{parentName:"tr",align:null},"236649.95"),(0,r.kt)("td",{parentName:"tr",align:null},"822049.149598")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-08"),(0,r.kt)("td",{parentName:"tr",align:null},"37869.797143"),(0,r.kt)("td",{parentName:"tr",align:null},"39646.105714"),(0,r.kt)("td",{parentName:"tr",align:null},"34623.334286"),(0,r.kt)("td",{parentName:"tr",align:null},"37827.52"),(0,r.kt)("td",{parentName:"tr",align:null},"135188.296617"),(0,r.kt)("td",{parentName:"tr",align:null},"265088.58"),(0,r.kt)("td",{parentName:"tr",align:null},"277522.74"),(0,r.kt)("td",{parentName:"tr",align:null},"242363.34"),(0,r.kt)("td",{parentName:"tr",align:null},"264792.64"),(0,r.kt)("td",{parentName:"tr",align:null},"946318.076319")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-15"),(0,r.kt)("td",{parentName:"tr",align:null},"36527.891429"),(0,r.kt)("td",{parentName:"tr",align:null},"37412.2"),(0,r.kt)("td",{parentName:"tr",align:null},"33961.551429"),(0,r.kt)("td",{parentName:"tr",align:null},"35343.847143"),(0,r.kt)("td",{parentName:"tr",align:null},"94212.715129"),(0,r.kt)("td",{parentName:"tr",align:null},"255695.24"),(0,r.kt)("td",{parentName:"tr",align:null},"261885.4"),(0,r.kt)("td",{parentName:"tr",align:null},"237730.86"),(0,r.kt)("td",{parentName:"tr",align:null},"247406.93"),(0,r.kt)("td",{parentName:"tr",align:null},"659489.005903")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-22"),(0,r.kt)("td",{parentName:"tr",align:null},"31888.547143"),(0,r.kt)("td",{parentName:"tr",align:null},"33498.811429"),(0,r.kt)("td",{parentName:"tr",align:null},"30424.478571"),(0,r.kt)("td",{parentName:"tr",align:null},"32248.007143"),(0,r.kt)("td",{parentName:"tr",align:null},"89649.935836"),(0,r.kt)("td",{parentName:"tr",align:null},"223219.83"),(0,r.kt)("td",{parentName:"tr",align:null},"234491.68"),(0,r.kt)("td",{parentName:"tr",align:null},"212971.35"),(0,r.kt)("td",{parentName:"tr",align:null},"225736.05"),(0,r.kt)("td",{parentName:"tr",align:null},"627549.550849")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-29"),(0,r.kt)("td",{parentName:"tr",align:null},"34511.482857"),(0,r.kt)("td",{parentName:"tr",align:null},"36411.441429"),(0,r.kt)("td",{parentName:"tr",align:null},"33450.08"),(0,r.kt)("td",{parentName:"tr",align:null},"35022.314286"),(0,r.kt)("td",{parentName:"tr",align:null},"102728.42481"),(0,r.kt)("td",{parentName:"tr",align:null},"241580.38"),(0,r.kt)("td",{parentName:"tr",align:null},"254880.09"),(0,r.kt)("td",{parentName:"tr",align:null},"234150.56"),(0,r.kt)("td",{parentName:"tr",align:null},"245156.2"),(0,r.kt)("td",{parentName:"tr",align:null},"719098.973673")))),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:N[7]}}))),(0,r.kt)("h2",{id:"upsampling"},"Upsampling"),(0,r.kt)("p",null,"The way to use a function like ",(0,r.kt)("inlineCode",{parentName:"p"},"generate_series")," to generate sequential\nvalues and then join them is general-purpose."),(0,r.kt)("p",null,"In R, we can also use dedicated functions like\n",(0,r.kt)("a",{parentName:"p",href:"https://business-science.github.io/timetk/reference/pad_by_time.html"},(0,r.kt)("inlineCode",{parentName:"a"},"timetk::pad_by_time")),"."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"PRQL DuckDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elm"},'let _tab1 = s"""\n  SELECT generate_series( -- Can\'t format this line https://github.com/PRQL/prql/issues/2430\n    (SELECT min(time)),\n    (SELECT max(time)),\n    INTERVAL \'6 hours\'\n  ).unnest() AS time\n  FROM tab\n"""\n\nfrom _tab1\njoin side:left tab [_tab1.time==tab.time]\nselect ![tab.time]\nsort _tab1.time\ntake 5\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"right"},"open"),(0,r.kt)("th",{parentName:"tr",align:"right"},"high"),(0,r.kt)("th",{parentName:"tr",align:"right"},"low"),(0,r.kt)("th",{parentName:"tr",align:"right"},"close"),(0,r.kt)("th",{parentName:"tr",align:"right"},"volume"),(0,r.kt)("th",{parentName:"tr",align:"left"},"time"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"28923.63"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29600"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28624.57"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29331.69"),(0,r.kt)("td",{parentName:"tr",align:"right"},"54182.93"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01 00:00:00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01 06:00:00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01 12:00:00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01 18:00:00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"29331.70"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33300"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28946.53"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32178.33"),(0,r.kt)("td",{parentName:"tr",align:"right"},"129993.87"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-02 00:00:00"))))),(0,r.kt)(i.Z,{value:"SQL DuckDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"WITH _tab1 AS (\n  SELECT\n    generate_series(\n      (FROM tab SELECT min(time)),\n      (FROM tab SELECT max(time)),\n      INTERVAL '6 hours'\n    ).unnest() AS time\n)\n\nFROM _tab1\nLEFT JOIN tab USING (time)\nORDER BY time\nLIMIT 5\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time"),(0,r.kt)("th",{parentName:"tr",align:"right"},"open"),(0,r.kt)("th",{parentName:"tr",align:"right"},"high"),(0,r.kt)("th",{parentName:"tr",align:"right"},"low"),(0,r.kt)("th",{parentName:"tr",align:"right"},"close"),(0,r.kt)("th",{parentName:"tr",align:"right"},"volume"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01 00:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28923.63"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29600"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28624.57"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29331.69"),(0,r.kt)("td",{parentName:"tr",align:"right"},"54182.93")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01 06:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01 12:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01 18:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-02 00:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29331.70"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33300"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28946.53"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32178.33"),(0,r.kt)("td",{parentName:"tr",align:"right"},"129993.87"))))),(0,r.kt)(i.Z,{value:"dplyr R",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},'.grid <- df$time |>\n  lubridate::as_datetime() |>\n  (\\(x) seq(min(x), max(x), by = "6 hours"))() |>\n  tibble::tibble(time = _)\n\n.grid |>\n  left_join(df, by = "time") |>\n  head(5)\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time"),(0,r.kt)("th",{parentName:"tr",align:"right"},"open"),(0,r.kt)("th",{parentName:"tr",align:"right"},"high"),(0,r.kt)("th",{parentName:"tr",align:"right"},"low"),(0,r.kt)("th",{parentName:"tr",align:"right"},"close"),(0,r.kt)("th",{parentName:"tr",align:"right"},"volume"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01 00:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28923.63"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29600"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28624.57"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29331.69"),(0,r.kt)("td",{parentName:"tr",align:"right"},"54182.93")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01 06:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01 12:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01 18:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-02 00:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29331.70"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33300"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28946.53"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32178.33"),(0,r.kt)("td",{parentName:"tr",align:"right"},"129993.87"))))),(0,r.kt)(i.Z,{value:"Python Polars",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'lf.collect().upsample("time", every="6h").head(5)\n')),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:N[8]}}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"time"),(0,r.kt)("th",{parentName:"tr",align:null},"open"),(0,r.kt)("th",{parentName:"tr",align:null},"high"),(0,r.kt)("th",{parentName:"tr",align:null},"low"),(0,r.kt)("th",{parentName:"tr",align:null},"close"),(0,r.kt)("th",{parentName:"tr",align:null},"volume"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"date"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-01"),(0,r.kt)("td",{parentName:"tr",align:null},"28923.63"),(0,r.kt)("td",{parentName:"tr",align:null},"29600.0"),(0,r.kt)("td",{parentName:"tr",align:null},"28624.57"),(0,r.kt)("td",{parentName:"tr",align:null},"29331.69"),(0,r.kt)("td",{parentName:"tr",align:null},"54182.925011")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-01"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-01"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-01"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-02"),(0,r.kt)("td",{parentName:"tr",align:null},"29331.7"),(0,r.kt)("td",{parentName:"tr",align:null},"33300.0"),(0,r.kt)("td",{parentName:"tr",align:null},"28946.53"),(0,r.kt)("td",{parentName:"tr",align:null},"32178.33"),(0,r.kt)("td",{parentName:"tr",align:null},"129993.873362")))),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:N[9]}}))),(0,r.kt)("h2",{id:"window-functions"},"Window Functions"),(0,r.kt)("p",null,"It is necessary to be careful how the Window function calculates if the\nwidth of the window is less than the specified value."),(0,r.kt)("h3",{id:"sec-moving-ave"},"Moving Average, Cumurative Avarage"),(0,r.kt)("p",null,"PRQL has a dedicated way of applying the window to the entire table. For\nthe others, use a individual function for each column."),(0,r.kt)("p",null,"In R, base R have some window functions like ",(0,r.kt)("inlineCode",{parentName:"p"},"cumsum"),", but none like\ncumurative avarage. dplyr complements this with several functions,\nincluding ",(0,r.kt)("inlineCode",{parentName:"p"},"cummean"),"."),(0,r.kt)("p",null,"Polars does not yet have a dedicated function to compute cumulative\naverages, so we must use cumulative sums to compute them."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://tomaugspurger.github.io/posts/modern-7-timeseries/#rolling--expanding--ew"},"The original Modern Pandas\npost"),"\nand ",(0,r.kt)("a",{parentName:"p",href:"https://kevinheavey.github.io/modern-polars/timeseries.html#rolling-expanding-ew"},"the Modern Polars\nbook"),"\nhave a exponentially weighted (EW) calculation example in addition. But\nDuckDB does not have a dedicated function to do this, so it is omitted\nhere.")),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"PRQL DuckDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elm"},"from tab\nsort _frame.time\nwindow rolling:28 (\n  derive [`28D MA` = average close]\n)\nwindow rows:..0 (\n  derive [`Expanding Average` = average close]\n)\nselect [\n  _frame.time,\n  Raw = close,\n  `28D MA`,\n  `Expanding Average`\n]\ntake 26..30\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Raw"),(0,r.kt)("th",{parentName:"tr",align:"right"},"28D MA"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Expanding Average"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-26"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32467.77"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35032.87"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35032.87")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-27"),(0,r.kt)("td",{parentName:"tr",align:"right"},"30366.15"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34860.03"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34860.03")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-28"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33364.86"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34806.63"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34806.63")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-29"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34252.20"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34982.36"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34787.51")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-30"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34262.88"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35056.81"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34770.02"))))),(0,r.kt)(i.Z,{value:"SQL DuckDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},'FROM tab\nSELECT\n  time,\n  close AS "Raw",\n  avg(close) OVER (\n    ORDER BY time\n    ROWS BETWEEN 27 PRECEDING AND CURRENT ROW\n  ) AS "28D MA",\n  avg(close) OVER (\n    ORDER BY time\n    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW\n  ) AS "Expanding Average"\nLIMIT 5 OFFSET 25\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Raw"),(0,r.kt)("th",{parentName:"tr",align:"right"},"28D MA"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Expanding Average"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-26"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32467.77"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35032.87"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35032.87")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-27"),(0,r.kt)("td",{parentName:"tr",align:"right"},"30366.15"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34860.03"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34860.03")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-28"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33364.86"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34806.63"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34806.63")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-29"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34252.20"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34982.36"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34787.51")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-30"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34262.88"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35056.81"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34770.02"))))),(0,r.kt)(i.Z,{value:"dplyr R",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},'roll_and_expand <- df |>\n  arrange(time) |>\n  mutate(\n    time,\n    Raw = close,\n    `28D MA` = close |>\n      slider::slide_vec(mean, .before = 27, .complete = TRUE),\n    `Expanding Average` = cummean(close),\n    .keep = "none"\n  )\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},"roll_and_expand |>\n  slice(26:30)\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Raw"),(0,r.kt)("th",{parentName:"tr",align:"right"},"28D MA"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Expanding Average"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-26"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32467.77"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35032.87")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-27"),(0,r.kt)("td",{parentName:"tr",align:"right"},"30366.15"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34860.03")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-28"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33364.86"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34806.63"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34806.63")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-29"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34252.20"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34982.36"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34787.51")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-30"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34262.88"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35056.81"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34770.02"))))),(0,r.kt)(i.Z,{value:"Python Polars",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'close = pl.col("close")\n\nroll_and_expand = lf.sort("time").select(\n    [\n        pl.col("time"),\n        close.alias("Raw"),\n        close.rolling_mean(28).alias("28D MA"),\n        close.alias("Expanding Average").cumsum() / (close.cumcount() + 1),\n    ]\n)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"roll_and_expand.head(30).tail(5).collect()\n")),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:N[10]}}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"time"),(0,r.kt)("th",{parentName:"tr",align:null},"Raw"),(0,r.kt)("th",{parentName:"tr",align:null},"28D MA"),(0,r.kt)("th",{parentName:"tr",align:null},"Expanding Average"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"date"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-26"),(0,r.kt)("td",{parentName:"tr",align:null},"32467.77"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"35032.867692")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-27"),(0,r.kt)("td",{parentName:"tr",align:null},"30366.15"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"34860.026296")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-28"),(0,r.kt)("td",{parentName:"tr",align:null},"33364.86"),(0,r.kt)("td",{parentName:"tr",align:null},"34806.6275"),(0,r.kt)("td",{parentName:"tr",align:null},"34806.6275")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-29"),(0,r.kt)("td",{parentName:"tr",align:null},"34252.2"),(0,r.kt)("td",{parentName:"tr",align:null},"34982.36"),(0,r.kt)("td",{parentName:"tr",align:null},"34787.50931")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-30"),(0,r.kt)("td",{parentName:"tr",align:null},"34262.88"),(0,r.kt)("td",{parentName:"tr",align:null},"35056.808214"),(0,r.kt)("td",{parentName:"tr",align:null},"34770.021667")))),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:N[11]}}))),(0,r.kt)("p",null,"Here, DuckDB also calculates avarage for cases where the window width is\nless than 28 for the ",(0,r.kt)("inlineCode",{parentName:"p"},"28D MA")," column, whereas R\n",(0,r.kt)("inlineCode",{parentName:"p"},"slider::slide_vec(.complete = TRUE)")," and Polars ",(0,r.kt)("inlineCode",{parentName:"p"},"rolling_mean")," make\nthem missing values. If we are using DuckDB and need to make replacement\nfor ",(0,r.kt)("inlineCode",{parentName:"p"},"NULL"),", we need to add further processing."),(0,r.kt)("p",null,"Plotting the results of dplyr shows the following."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Code"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},'library(ggplot2)\n\nroll_and_expand |>\n  tidyr::pivot_longer(cols = !time) |>\n  ggplot(aes(time, value, colour = name)) +\n  geom_line() +\n  theme_linedraw() +\n  labs(y = "Close ($)") +\n  scale_x_date(\n    date_breaks = "month",\n    labels = scales::label_date_short()\n  )\n'))),(0,r.kt)("p",null,(0,r.kt)("img",{src:e(2073).Z,width:"1536",height:"960"})),(0,r.kt)("h3",{id:"combining-rolling-aggregations"},"Combining Rolling Aggregations"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"PRQL DuckDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elm"},"from tab\nsort _frame.time\nwindow rows:-15..14 (\n  select [\n    _frame.time,\n    mean = average close,\n    std = stddev close\n  ]\n)\ntake 13..17\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time"),(0,r.kt)("th",{parentName:"tr",align:"right"},"mean"),(0,r.kt)("th",{parentName:"tr",align:"right"},"std"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-13"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34860.03"),(0,r.kt)("td",{parentName:"tr",align:"right"},"3092.516")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-14"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34806.63"),(0,r.kt)("td",{parentName:"tr",align:"right"},"3047.833")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-15"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34787.51"),(0,r.kt)("td",{parentName:"tr",align:"right"},"2994.683")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-16"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34770.02"),(0,r.kt)("td",{parentName:"tr",align:"right"},"2944.156")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-17"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34895.40"),(0,r.kt)("td",{parentName:"tr",align:"right"},"2780.095"))))),(0,r.kt)(i.Z,{value:"SQL DuckDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"FROM tab\nSELECT\n  time,\n  avg(close) OVER (\n    ORDER BY time\n    ROWS BETWEEN 15 PRECEDING AND 14 FOLLOWING\n  ) AS mean,\n  stddev(close) OVER (\n    ORDER BY time\n    ROWS BETWEEN 15 PRECEDING AND 14 FOLLOWING\n  ) AS std\nORDER BY time\nLIMIT 5 OFFSET 12\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time"),(0,r.kt)("th",{parentName:"tr",align:"right"},"mean"),(0,r.kt)("th",{parentName:"tr",align:"right"},"std"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-13"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34860.03"),(0,r.kt)("td",{parentName:"tr",align:"right"},"3092.516")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-14"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34806.63"),(0,r.kt)("td",{parentName:"tr",align:"right"},"3047.833")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-15"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34787.51"),(0,r.kt)("td",{parentName:"tr",align:"right"},"2994.683")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-16"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34770.02"),(0,r.kt)("td",{parentName:"tr",align:"right"},"2944.156")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-17"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34895.40"),(0,r.kt)("td",{parentName:"tr",align:"right"},"2780.095"))))),(0,r.kt)(i.Z,{value:"dplyr R",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},'.slide_func <- function(.x, .fn) {\n  slider::slide_vec(.x, .fn, .before = 15, .after = 14, .complete = TRUE)\n}\n\nmean_std <- df |>\n  arrange(time) |>\n  mutate(\n    time,\n    across(\n      close,\n      .fns = list(mean = \\(x) .slide_func(x, mean), std = \\(x) .slide_func(x, sd)),\n      .names = "{.fn}"\n    ),\n    .keep = "none"\n  )\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},"mean_std |>\n  slice(13:17)\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time"),(0,r.kt)("th",{parentName:"tr",align:"right"},"mean"),(0,r.kt)("th",{parentName:"tr",align:"right"},"std"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-13"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-14"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-15"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-16"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34770.02"),(0,r.kt)("td",{parentName:"tr",align:"right"},"2944.156")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-17"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34895.40"),(0,r.kt)("td",{parentName:"tr",align:"right"},"2780.095"))))),(0,r.kt)(i.Z,{value:"Python Polars",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'mean_std = lf.sort("time").select(\n    time=pl.col("time"),\n    mean=pl.col("close").rolling_mean(30, center=True),\n    std=pl.col("close").rolling_std(30, center=True),\n)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"mean_std.head(17).tail(5).collect()\n")),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:N[12]}}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"time"),(0,r.kt)("th",{parentName:"tr",align:null},"mean"),(0,r.kt)("th",{parentName:"tr",align:null},"std"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"date"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-13"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-14"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-15"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"null")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-16"),(0,r.kt)("td",{parentName:"tr",align:null},"34770.021667"),(0,r.kt)("td",{parentName:"tr",align:null},"2944.155675")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-17"),(0,r.kt)("td",{parentName:"tr",align:null},"34895.398"),(0,r.kt)("td",{parentName:"tr",align:null},"2780.095304")))),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:N[13]}}))),(0,r.kt)("p",null,"As in ",(0,r.kt)("a",{parentName:"p",href:"#sec-moving-ave"},"Section\xa05.1"),", here too the DuckDB results differ\nfrom the others."),(0,r.kt)("p",null,"Plotting the results of dplyr shows the following."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Code"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},'library(ggplot2)\n\nmean_std |>\n  ggplot(aes(time)) +\n  geom_ribbon(\n    aes(ymin = mean - std, ymax = mean + std),\n    alpha = 0.3, fill = "blue"\n  ) +\n  geom_line(aes(y = mean), color = "blue") +\n  theme_linedraw() +\n  labs(y = "Close ($)") +\n  scale_x_date(\n    date_breaks = "month",\n    labels = scales::label_date_short()\n  )\n'))),(0,r.kt)("p",null,(0,r.kt)("img",{src:e(7741).Z,width:"1536",height:"960"})),(0,r.kt)("h2",{id:"timezones"},"Timezones"),(0,r.kt)("admonition",{type:"important"},(0,r.kt)("p",{parentName:"admonition"},"In DuckDB, the icu DuckDB extension is needed for time zones support. If\nthe DuckDB client that we are using does not contain the extension, we\nneed to install and load it."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"INSTALL 'icu'\n")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"LOAD 'icu'\n"))),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"PRQL DuckDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elm"},'func timezone tz col -> s"timezone({tz}, {col})"\n\nfrom tab\nderive [\n  time_new = (_frame.time | timezone "UTC" | timezone "US/Eastern")\n]\nselect ![_frame.time]\ntake 5\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"right"},"open"),(0,r.kt)("th",{parentName:"tr",align:"right"},"high"),(0,r.kt)("th",{parentName:"tr",align:"right"},"low"),(0,r.kt)("th",{parentName:"tr",align:"right"},"close"),(0,r.kt)("th",{parentName:"tr",align:"right"},"volume"),(0,r.kt)("th",{parentName:"tr",align:"left"},"time_new"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"28923.63"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29600.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28624.57"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29331.69"),(0,r.kt)("td",{parentName:"tr",align:"right"},"54182.93"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2020-12-31 19:00:00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"29331.70"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33300.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28946.53"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32178.33"),(0,r.kt)("td",{parentName:"tr",align:"right"},"129993.87"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01 19:00:00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"32176.45"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34778.11"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31962.99"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33000.05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"120957.57"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-02 19:00:00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"33000.05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33600.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28130.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31988.71"),(0,r.kt)("td",{parentName:"tr",align:"right"},"140899.89"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-03 19:00:00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"31989.75"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34360.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29900.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33949.53"),(0,r.kt)("td",{parentName:"tr",align:"right"},"116050.00"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-04 19:00:00"))))),(0,r.kt)(i.Z,{value:"SQL DuckDB",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"FROM tab\nSELECT\n  * REPLACE timezone('US/Eastern', timezone('UTC', time)) AS time\nLIMIT 5\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time"),(0,r.kt)("th",{parentName:"tr",align:"right"},"open"),(0,r.kt)("th",{parentName:"tr",align:"right"},"high"),(0,r.kt)("th",{parentName:"tr",align:"right"},"low"),(0,r.kt)("th",{parentName:"tr",align:"right"},"close"),(0,r.kt)("th",{parentName:"tr",align:"right"},"volume"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2020-12-31 19:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28923.63"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29600.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28624.57"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29331.69"),(0,r.kt)("td",{parentName:"tr",align:"right"},"54182.93")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01 19:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29331.70"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33300.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28946.53"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32178.33"),(0,r.kt)("td",{parentName:"tr",align:"right"},"129993.87")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-02 19:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32176.45"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34778.11"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31962.99"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33000.05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"120957.57")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-03 19:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33000.05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33600.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28130.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31988.71"),(0,r.kt)("td",{parentName:"tr",align:"right"},"140899.89")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-04 19:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31989.75"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34360.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29900.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33949.53"),(0,r.kt)("td",{parentName:"tr",align:"right"},"116050.00"))))),(0,r.kt)(i.Z,{value:"dplyr R",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},'df |>\n  mutate(\n    time = time |>\n      lubridate::force_tz("UTC") |>\n      lubridate::with_tz("US/Eastern")\n  ) |>\n  head(5)\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"time"),(0,r.kt)("th",{parentName:"tr",align:"right"},"open"),(0,r.kt)("th",{parentName:"tr",align:"right"},"high"),(0,r.kt)("th",{parentName:"tr",align:"right"},"low"),(0,r.kt)("th",{parentName:"tr",align:"right"},"close"),(0,r.kt)("th",{parentName:"tr",align:"right"},"volume"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2020-12-31 19:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28923.63"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29600.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28624.57"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29331.69"),(0,r.kt)("td",{parentName:"tr",align:"right"},"54182.93")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-01 19:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29331.70"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33300.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28946.53"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32178.33"),(0,r.kt)("td",{parentName:"tr",align:"right"},"129993.87")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-02 19:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"32176.45"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34778.11"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31962.99"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33000.05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"120957.57")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-03 19:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33000.05"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33600.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28130.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31988.71"),(0,r.kt)("td",{parentName:"tr",align:"right"},"140899.89")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2021-01-04 19:00:00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31989.75"),(0,r.kt)("td",{parentName:"tr",align:"right"},"34360.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"29900.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"33949.53"),(0,r.kt)("td",{parentName:"tr",align:"right"},"116050.00"))))),(0,r.kt)(i.Z,{value:"Python Polars",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'(\n    lf.with_columns(\n        pl.col("time")\n        .cast(pl.Datetime)\n        .dt.replace_time_zone("UTC")\n        .dt.convert_time_zone("US/Eastern")\n    )\n    .head(5)\n    .collect()\n)\n')),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:N[14]}}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"time"),(0,r.kt)("th",{parentName:"tr",align:null},"open"),(0,r.kt)("th",{parentName:"tr",align:null},"high"),(0,r.kt)("th",{parentName:"tr",align:null},"low"),(0,r.kt)("th",{parentName:"tr",align:null},"close"),(0,r.kt)("th",{parentName:"tr",align:null},"volume"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"datetime","[","\u03bcs, US/Eastern","]"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"f64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2020-12-31 19:00:00 EST"),(0,r.kt)("td",{parentName:"tr",align:null},"28923.63"),(0,r.kt)("td",{parentName:"tr",align:null},"29600.0"),(0,r.kt)("td",{parentName:"tr",align:null},"28624.57"),(0,r.kt)("td",{parentName:"tr",align:null},"29331.69"),(0,r.kt)("td",{parentName:"tr",align:null},"54182.925011")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-01 19:00:00 EST"),(0,r.kt)("td",{parentName:"tr",align:null},"29331.7"),(0,r.kt)("td",{parentName:"tr",align:null},"33300.0"),(0,r.kt)("td",{parentName:"tr",align:null},"28946.53"),(0,r.kt)("td",{parentName:"tr",align:null},"32178.33"),(0,r.kt)("td",{parentName:"tr",align:null},"129993.873362")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-02 19:00:00 EST"),(0,r.kt)("td",{parentName:"tr",align:null},"32176.45"),(0,r.kt)("td",{parentName:"tr",align:null},"34778.11"),(0,r.kt)("td",{parentName:"tr",align:null},"31962.99"),(0,r.kt)("td",{parentName:"tr",align:null},"33000.05"),(0,r.kt)("td",{parentName:"tr",align:null},"120957.56675")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-03 19:00:00 EST"),(0,r.kt)("td",{parentName:"tr",align:null},"33000.05"),(0,r.kt)("td",{parentName:"tr",align:null},"33600.0"),(0,r.kt)("td",{parentName:"tr",align:null},"28130.0"),(0,r.kt)("td",{parentName:"tr",align:null},"31988.71"),(0,r.kt)("td",{parentName:"tr",align:null},"140899.88569")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2021-01-04 19:00:00 EST"),(0,r.kt)("td",{parentName:"tr",align:null},"31989.75"),(0,r.kt)("td",{parentName:"tr",align:null},"34360.0"),(0,r.kt)("td",{parentName:"tr",align:null},"29900.0"),(0,r.kt)("td",{parentName:"tr",align:null},"33949.53"),(0,r.kt)("td",{parentName:"tr",align:null},"116049.997038")))),(0,r.kt)("div",{dangerouslySetInnerHTML:{__html:N[15]}}))),(0,r.kt)("p",null,"Note that each system may keep time zone information in a different way.\nHere, the ",(0,r.kt)("inlineCode",{parentName:"p"},"time")," column (and the ",(0,r.kt)("inlineCode",{parentName:"p"},"time_new")," column) in DuckDB results\nare the TIMESTAMP type, has no time zone information."),(0,r.kt)("div",{className:"footnotes"},(0,r.kt)("hr",{parentName:"div"}),(0,r.kt)("ol",{parentName:"div"},(0,r.kt)("li",{parentName:"ol",id:"fn-1"},(0,r.kt)("a",{parentName:"li",href:"https://duckdb.org/docs/sql/functions/timestamptz#icu-timestamp-with-time-zone-operators"},"https://duckdb.org/docs/sql/functions/timestamptz#icu-timestamp-with-time-zone-operators"),(0,r.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")),(0,r.kt)("li",{parentName:"ol",id:"fn-2"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/tidyverse/lubridate/issues/932"},"https://github.com/tidyverse/lubridate/issues/932"),(0,r.kt)("a",{parentName:"li",href:"#fnref-2",className:"footnote-backref"},"\u21a9")),(0,r.kt)("li",{parentName:"ol",id:"fn-3"},(0,r.kt)("a",{parentName:"li",href:"https://pola-rs.github.io/polars/py-polars/html/reference/dataframe/api/polars.DataFrame.groupby_dynamic.html"},"https://pola-rs.github.io/polars/py-polars/html/reference/dataframe/api/polars.DataFrame.groupby_dynamic.html"),(0,r.kt)("a",{parentName:"li",href:"#fnref-3",className:"footnote-backref"},"\u21a9")))))}u.isMDXComponent=!0},7741:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/plot-rolling-combined-1-61c1f9be1eee948b0223996b8d917657.png"},2073:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/plot-window-functions-1-2697f18fde4fc52327d5c4cbc7aa44fb.png"}}]);