"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[90],{4790:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>r,default:()=>x,frontMatter:()=>i,metadata:()=>h,quartoRawHtml:()=>g,toc:()=>c});var a=n(5893),l=n(1151),d=n(4866),s=n(5162);const i={title:"Reshaping and Tidy Data",description:"Make the data tidy.",engine:"knitr",knitr:{opts_chunk:{connection:"con","engine-opts":{target:"sql.duckdb",use_glue:!0,info_string:'{.sql filename="SQL"}'}}},execute:{cache:!0},sidebar_position:4},r=void 0,h={id:"tidy",title:"Reshaping and Tidy Data",description:"Make the data tidy.",source:"@site/docs/tidy.mdx",sourceDirName:".",slug:"/tidy",permalink:"/querying-with-prql/tidy",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Reshaping and Tidy Data",description:"Make the data tidy.",engine:"knitr",knitr:{opts_chunk:{connection:"con","engine-opts":{target:"sql.duckdb",use_glue:!0,info_string:'{.sql filename="SQL"}'}}},execute:{cache:!0},sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Define Functions",permalink:"/querying-with-prql/method_chaining"},next:{title:"Timeseries",permalink:"/querying-with-prql/timeseries"}},o={},g=['\n<table>\n<thead>\n<tr class="header">\n<th style="text-align: left;">date</th>\n<th style="text-align: left;">away_team</th>\n<th style="text-align: right;">away_points</th>\n<th style="text-align: left;">home_team</th>\n<th style="text-align: right;">home_points</th>\n</tr>\n</thead>\n<tbody>\n<tr class="odd">\n<td style="text-align: left;">Fri, Apr 1, 2016</td>\n<td style="text-align: left;">Philadelphia 76ers</td>\n<td style="text-align: right;">91</td>\n<td style="text-align: left;">Charlotte Hornets</td>\n<td style="text-align: right;">100</td>\n</tr>\n<tr class="even">\n<td style="text-align: left;">Fri, Apr 1, 2016</td>\n<td style="text-align: left;">Dallas Mavericks</td>\n<td style="text-align: right;">98</td>\n<td style="text-align: left;">Detroit Pistons</td>\n<td style="text-align: right;">89</td>\n</tr>\n<tr class="odd">\n<td style="text-align: left;">Fri, Apr 1, 2016</td>\n<td style="text-align: left;">Brooklyn Nets</td>\n<td style="text-align: right;">91</td>\n<td style="text-align: left;">New York Knicks</td>\n<td style="text-align: right;">105</td>\n</tr>\n<tr class="even">\n<td style="text-align: left;">Fri, Apr 1, 2016</td>\n<td style="text-align: left;">Cleveland Cavaliers</td>\n<td style="text-align: right;">110</td>\n<td style="text-align: left;">Atlanta Hawks</td>\n<td style="text-align: right;">108</td>\n</tr>\n<tr class="odd">\n<td style="text-align: left;">Fri, Apr 1, 2016</td>\n<td style="text-align: left;">Toronto Raptors</td>\n<td style="text-align: right;">99</td>\n<td style="text-align: left;">Memphis Grizzlies</td>\n<td style="text-align: right;">95</td>\n</tr>\n</tbody>\n</table>\n','\n<table>\n<thead>\n<tr class="header">\n<th style="text-align: left;">date</th>\n<th style="text-align: left;">away_team</th>\n<th style="text-align: right;">away_points</th>\n<th style="text-align: left;">home_team</th>\n<th style="text-align: right;">home_points</th>\n</tr>\n</thead>\n<tbody>\n<tr class="odd">\n<td style="text-align: left;">Fri, Apr 1, 2016</td>\n<td style="text-align: left;">Philadelphia 76ers</td>\n<td style="text-align: right;">91</td>\n<td style="text-align: left;">Charlotte Hornets</td>\n<td style="text-align: right;">100</td>\n</tr>\n<tr class="even">\n<td style="text-align: left;">Fri, Apr 1, 2016</td>\n<td style="text-align: left;">Dallas Mavericks</td>\n<td style="text-align: right;">98</td>\n<td style="text-align: left;">Detroit Pistons</td>\n<td style="text-align: right;">89</td>\n</tr>\n<tr class="odd">\n<td style="text-align: left;">Fri, Apr 1, 2016</td>\n<td style="text-align: left;">Brooklyn Nets</td>\n<td style="text-align: right;">91</td>\n<td style="text-align: left;">New York Knicks</td>\n<td style="text-align: right;">105</td>\n</tr>\n<tr class="even">\n<td style="text-align: left;">Fri, Apr 1, 2016</td>\n<td style="text-align: left;">Cleveland Cavaliers</td>\n<td style="text-align: right;">110</td>\n<td style="text-align: left;">Atlanta Hawks</td>\n<td style="text-align: right;">108</td>\n</tr>\n<tr class="odd">\n<td style="text-align: left;">Fri, Apr 1, 2016</td>\n<td style="text-align: left;">Toronto Raptors</td>\n<td style="text-align: right;">99</td>\n<td style="text-align: left;">Memphis Grizzlies</td>\n<td style="text-align: right;">95</td>\n</tr>\n</tbody>\n</table>\n',"<div><style>\n.dataframe > thead > tr,\n.dataframe > tbody > tr {\n  text-align: right;\n  white-space: pre-wrap;\n}\n</style>\n<small>shape: (5, 5)</small>",'\n<table class="dataframe" data-quarto-postprocess="true" data-border="1">\n<thead>\n<tr class="header">\n<th data-quarto-table-cell-role="th">date</th>\n<th data-quarto-table-cell-role="th">away_team</th>\n<th data-quarto-table-cell-role="th">away_points</th>\n<th data-quarto-table-cell-role="th">home_team</th>\n<th data-quarto-table-cell-role="th">home_points</th>\n</tr>\n<tr class="odd">\n<th>str</th>\n<th>str</th>\n<th>i64</th>\n<th>str</th>\n<th>i64</th>\n</tr>\n</thead>\n<tbody>\n<tr class="odd">\n<td>"Fri, Apr 1, 2016"</td>\n<td>"Philadelphia 76ers"</td>\n<td>91</td>\n<td>"Charlotte Hornets"</td>\n<td>100</td>\n</tr>\n<tr class="even">\n<td>"Fri, Apr 1, 2016"</td>\n<td>"Dallas Mavericks"</td>\n<td>98</td>\n<td>"Detroit Pistons"</td>\n<td>89</td>\n</tr>\n<tr class="odd">\n<td>"Fri, Apr 1, 2016"</td>\n<td>"Brooklyn Nets"</td>\n<td>91</td>\n<td>"New York Knicks"</td>\n<td>105</td>\n</tr>\n<tr class="even">\n<td>"Fri, Apr 1, 2016"</td>\n<td>"Cleveland Cavaliers"</td>\n<td>110</td>\n<td>"Atlanta Hawks"</td>\n<td>108</td>\n</tr>\n<tr class="odd">\n<td>"Fri, Apr 1, 2016"</td>\n<td>"Toronto Raptors"</td>\n<td>99</td>\n<td>"Memphis Grizzlies"</td>\n<td>95</td>\n</tr>\n</tbody>\n</table>\n',"</div>",'\n<table>\n<thead>\n<tr class="header">\n<th style="text-align: left;">away_team</th>\n<th style="text-align: right;">away_points</th>\n<th style="text-align: left;">home_team</th>\n<th style="text-align: right;">home_points</th>\n<th style="text-align: left;">date_new</th>\n<th style="text-align: right;">game_id</th>\n</tr>\n</thead>\n<tbody>\n<tr class="odd">\n<td style="text-align: left;">Cleveland Cavaliers</td>\n<td style="text-align: right;">95</td>\n<td style="text-align: left;">Chicago Bulls</td>\n<td style="text-align: right;">97</td>\n<td style="text-align: left;">2015-10-27</td>\n<td style="text-align: right;">1</td>\n</tr>\n<tr class="even">\n<td style="text-align: left;">Detroit Pistons</td>\n<td style="text-align: right;">106</td>\n<td style="text-align: left;">Atlanta Hawks</td>\n<td style="text-align: right;">94</td>\n<td style="text-align: left;">2015-10-27</td>\n<td style="text-align: right;">2</td>\n</tr>\n<tr class="odd">\n<td style="text-align: left;">New Orleans Pelicans</td>\n<td style="text-align: right;">95</td>\n<td style="text-align: left;">Golden State Warriors</td>\n<td style="text-align: right;">111</td>\n<td style="text-align: left;">2015-10-27</td>\n<td style="text-align: right;">3</td>\n</tr>\n<tr class="even">\n<td style="text-align: left;">Washington Wizards</td>\n<td style="text-align: right;">88</td>\n<td style="text-align: left;">Orlando Magic</td>\n<td style="text-align: right;">87</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: right;">4</td>\n</tr>\n<tr class="odd">\n<td style="text-align: left;">Philadelphia 76ers</td>\n<td style="text-align: right;">95</td>\n<td style="text-align: left;">Boston Celtics</td>\n<td style="text-align: right;">112</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: right;">5</td>\n</tr>\n</tbody>\n</table>\n','\n<table>\n<thead>\n<tr class="header">\n<th style="text-align: right;">game_id</th>\n<th style="text-align: left;">date</th>\n<th style="text-align: left;">away_team</th>\n<th style="text-align: right;">away_points</th>\n<th style="text-align: left;">home_team</th>\n<th style="text-align: right;">home_points</th>\n</tr>\n</thead>\n<tbody>\n<tr class="odd">\n<td style="text-align: right;">1</td>\n<td style="text-align: left;">2015-10-27</td>\n<td style="text-align: left;">Cleveland Cavaliers</td>\n<td style="text-align: right;">95</td>\n<td style="text-align: left;">Chicago Bulls</td>\n<td style="text-align: right;">97</td>\n</tr>\n<tr class="even">\n<td style="text-align: right;">2</td>\n<td style="text-align: left;">2015-10-27</td>\n<td style="text-align: left;">Detroit Pistons</td>\n<td style="text-align: right;">106</td>\n<td style="text-align: left;">Atlanta Hawks</td>\n<td style="text-align: right;">94</td>\n</tr>\n<tr class="odd">\n<td style="text-align: right;">3</td>\n<td style="text-align: left;">2015-10-27</td>\n<td style="text-align: left;">New Orleans Pelicans</td>\n<td style="text-align: right;">95</td>\n<td style="text-align: left;">Golden State Warriors</td>\n<td style="text-align: right;">111</td>\n</tr>\n<tr class="even">\n<td style="text-align: right;">4</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">Washington Wizards</td>\n<td style="text-align: right;">88</td>\n<td style="text-align: left;">Orlando Magic</td>\n<td style="text-align: right;">87</td>\n</tr>\n<tr class="odd">\n<td style="text-align: right;">5</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">Philadelphia 76ers</td>\n<td style="text-align: right;">95</td>\n<td style="text-align: left;">Boston Celtics</td>\n<td style="text-align: right;">112</td>\n</tr>\n</tbody>\n</table>\n','\n<table>\n<thead>\n<tr class="header">\n<th style="text-align: right;">game_id</th>\n<th style="text-align: left;">date</th>\n<th style="text-align: left;">away_team</th>\n<th style="text-align: right;">away_points</th>\n<th style="text-align: left;">home_team</th>\n<th style="text-align: right;">home_points</th>\n</tr>\n</thead>\n<tbody>\n<tr class="odd">\n<td style="text-align: right;">1</td>\n<td style="text-align: left;">2015-10-27</td>\n<td style="text-align: left;">Cleveland Cavaliers</td>\n<td style="text-align: right;">95</td>\n<td style="text-align: left;">Chicago Bulls</td>\n<td style="text-align: right;">97</td>\n</tr>\n<tr class="even">\n<td style="text-align: right;">2</td>\n<td style="text-align: left;">2015-10-27</td>\n<td style="text-align: left;">Detroit Pistons</td>\n<td style="text-align: right;">106</td>\n<td style="text-align: left;">Atlanta Hawks</td>\n<td style="text-align: right;">94</td>\n</tr>\n<tr class="odd">\n<td style="text-align: right;">3</td>\n<td style="text-align: left;">2015-10-27</td>\n<td style="text-align: left;">New Orleans Pelicans</td>\n<td style="text-align: right;">95</td>\n<td style="text-align: left;">Golden State Warriors</td>\n<td style="text-align: right;">111</td>\n</tr>\n<tr class="even">\n<td style="text-align: right;">4</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">Washington Wizards</td>\n<td style="text-align: right;">88</td>\n<td style="text-align: left;">Orlando Magic</td>\n<td style="text-align: right;">87</td>\n</tr>\n<tr class="odd">\n<td style="text-align: right;">5</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">Philadelphia 76ers</td>\n<td style="text-align: right;">95</td>\n<td style="text-align: left;">Boston Celtics</td>\n<td style="text-align: right;">112</td>\n</tr>\n</tbody>\n</table>\n',"<div><style>\n.dataframe > thead > tr,\n.dataframe > tbody > tr {\n  text-align: right;\n  white-space: pre-wrap;\n}\n</style>\n<small>shape: (5, 6)</small>",'\n<table class="dataframe" data-quarto-postprocess="true" data-border="1">\n<thead>\n<tr class="header">\n<th data-quarto-table-cell-role="th">game_id</th>\n<th data-quarto-table-cell-role="th">date</th>\n<th data-quarto-table-cell-role="th">away_team</th>\n<th data-quarto-table-cell-role="th">away_points</th>\n<th data-quarto-table-cell-role="th">home_team</th>\n<th data-quarto-table-cell-role="th">home_points</th>\n</tr>\n<tr class="odd">\n<th>u32</th>\n<th>date</th>\n<th>str</th>\n<th>i64</th>\n<th>str</th>\n<th>i64</th>\n</tr>\n</thead>\n<tbody>\n<tr class="odd">\n<td>0</td>\n<td>2015-10-27</td>\n<td>"Cleveland Cavaliers"</td>\n<td>95</td>\n<td>"Chicago Bulls"</td>\n<td>97</td>\n</tr>\n<tr class="even">\n<td>1</td>\n<td>2015-10-27</td>\n<td>"Detroit Pistons"</td>\n<td>106</td>\n<td>"Atlanta Hawks"</td>\n<td>94</td>\n</tr>\n<tr class="odd">\n<td>2</td>\n<td>2015-10-27</td>\n<td>"New Orleans Pelicans"</td>\n<td>95</td>\n<td>"Golden State Warriors"</td>\n<td>111</td>\n</tr>\n<tr class="even">\n<td>3</td>\n<td>2015-10-28</td>\n<td>"Washington Wizards"</td>\n<td>88</td>\n<td>"Orlando Magic"</td>\n<td>87</td>\n</tr>\n<tr class="odd">\n<td>4</td>\n<td>2015-10-28</td>\n<td>"Philadelphia 76ers"</td>\n<td>95</td>\n<td>"Boston Celtics"</td>\n<td>112</td>\n</tr>\n</tbody>\n</table>\n',"</div>",'\n<table>\n<thead>\n<tr class="header">\n<th style="text-align: right;">game_id</th>\n<th style="text-align: left;">date</th>\n<th style="text-align: left;">variable</th>\n<th style="text-align: left;">team</th>\n<th style="text-align: right;">rest</th>\n</tr>\n</thead>\n<tbody>\n<tr class="odd">\n<td style="text-align: right;">6</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">away_team</td>\n<td style="text-align: left;">Chicago Bulls</td>\n<td style="text-align: right;">0</td>\n</tr>\n<tr class="even">\n<td style="text-align: right;">7</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">home_team</td>\n<td style="text-align: left;">Detroit Pistons</td>\n<td style="text-align: right;">0</td>\n</tr>\n<tr class="odd">\n<td style="text-align: right;">12</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">away_team</td>\n<td style="text-align: left;">Cleveland Cavaliers</td>\n<td style="text-align: right;">0</td>\n</tr>\n<tr class="even">\n<td style="text-align: right;">15</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">away_team</td>\n<td style="text-align: left;">New Orleans Pelicans</td>\n<td style="text-align: right;">0</td>\n</tr>\n<tr class="odd">\n<td style="text-align: right;">18</td>\n<td style="text-align: left;">2015-10-29</td>\n<td style="text-align: left;">home_team</td>\n<td style="text-align: left;">Indiana Pacers</td>\n<td style="text-align: right;">0</td>\n</tr>\n</tbody>\n</table>\n','\n<table>\n<thead>\n<tr class="header">\n<th style="text-align: right;">game_id</th>\n<th style="text-align: left;">date</th>\n<th style="text-align: left;">variable</th>\n<th style="text-align: left;">team</th>\n<th style="text-align: right;">rest</th>\n</tr>\n</thead>\n<tbody>\n<tr class="odd">\n<td style="text-align: right;">6</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">away_team</td>\n<td style="text-align: left;">Chicago Bulls</td>\n<td style="text-align: right;">0</td>\n</tr>\n<tr class="even">\n<td style="text-align: right;">7</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">home_team</td>\n<td style="text-align: left;">Detroit Pistons</td>\n<td style="text-align: right;">0</td>\n</tr>\n<tr class="odd">\n<td style="text-align: right;">12</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">away_team</td>\n<td style="text-align: left;">Cleveland Cavaliers</td>\n<td style="text-align: right;">0</td>\n</tr>\n<tr class="even">\n<td style="text-align: right;">15</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">away_team</td>\n<td style="text-align: left;">New Orleans Pelicans</td>\n<td style="text-align: right;">0</td>\n</tr>\n<tr class="odd">\n<td style="text-align: right;">18</td>\n<td style="text-align: left;">2015-10-29</td>\n<td style="text-align: left;">home_team</td>\n<td style="text-align: left;">Indiana Pacers</td>\n<td style="text-align: right;">0</td>\n</tr>\n</tbody>\n</table>\n','\n<table>\n<thead>\n<tr class="header">\n<th style="text-align: right;">game_id</th>\n<th style="text-align: left;">date</th>\n<th style="text-align: left;">variable</th>\n<th style="text-align: left;">team</th>\n<th style="text-align: left;">rest</th>\n</tr>\n</thead>\n<tbody>\n<tr class="odd">\n<td style="text-align: right;">6</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">away_team</td>\n<td style="text-align: left;">Chicago Bulls</td>\n<td style="text-align: left;">0 days</td>\n</tr>\n<tr class="even">\n<td style="text-align: right;">7</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">home_team</td>\n<td style="text-align: left;">Detroit Pistons</td>\n<td style="text-align: left;">0 days</td>\n</tr>\n<tr class="odd">\n<td style="text-align: right;">12</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">away_team</td>\n<td style="text-align: left;">Cleveland Cavaliers</td>\n<td style="text-align: left;">0 days</td>\n</tr>\n<tr class="even">\n<td style="text-align: right;">15</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">away_team</td>\n<td style="text-align: left;">New Orleans Pelicans</td>\n<td style="text-align: left;">0 days</td>\n</tr>\n<tr class="odd">\n<td style="text-align: right;">18</td>\n<td style="text-align: left;">2015-10-29</td>\n<td style="text-align: left;">away_team</td>\n<td style="text-align: left;">Memphis Grizzlies</td>\n<td style="text-align: left;">0 days</td>\n</tr>\n</tbody>\n</table>\n',"<div><style>\n.dataframe > thead > tr,\n.dataframe > tbody > tr {\n  text-align: right;\n  white-space: pre-wrap;\n}\n</style>\n<small>shape: (5, 5)</small>",'\n<table class="dataframe" data-quarto-postprocess="true" data-border="1">\n<thead>\n<tr class="header">\n<th data-quarto-table-cell-role="th">game_id</th>\n<th data-quarto-table-cell-role="th">date</th>\n<th data-quarto-table-cell-role="th">variable</th>\n<th data-quarto-table-cell-role="th">team</th>\n<th data-quarto-table-cell-role="th">rest</th>\n</tr>\n<tr class="odd">\n<th>u32</th>\n<th>date</th>\n<th>str</th>\n<th>str</th>\n<th>i8</th>\n</tr>\n</thead>\n<tbody>\n<tr class="odd">\n<td>5</td>\n<td>2015-10-28</td>\n<td>"away_team"</td>\n<td>"Chicago Bulls"</td>\n<td>0</td>\n</tr>\n<tr class="even">\n<td>6</td>\n<td>2015-10-28</td>\n<td>"home_team"</td>\n<td>"Detroit Pistons"</td>\n<td>0</td>\n</tr>\n<tr class="odd">\n<td>11</td>\n<td>2015-10-28</td>\n<td>"away_team"</td>\n<td>"Cleveland Cavaliers"</td>\n<td>0</td>\n</tr>\n<tr class="even">\n<td>14</td>\n<td>2015-10-28</td>\n<td>"away_team"</td>\n<td>"New Orleans Pelicans"</td>\n<td>0</td>\n</tr>\n<tr class="odd">\n<td>17</td>\n<td>2015-10-29</td>\n<td>"away_team"</td>\n<td>"Memphis Grizzlies"</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n',"</div>",'\n<table>\n<thead>\n<tr class="header">\n<th style="text-align: right;">game_id</th>\n<th style="text-align: left;">date</th>\n<th style="text-align: right;">away_rest</th>\n<th style="text-align: right;">home_rest</th>\n<th style="text-align: right;">game_id</th>\n<th style="text-align: left;">date</th>\n<th style="text-align: left;">away_team</th>\n<th style="text-align: right;">away_points</th>\n<th style="text-align: left;">home_team</th>\n<th style="text-align: right;">home_points</th>\n<th style="text-align: left;">home_win</th>\n<th style="text-align: right;">rest_spread</th>\n</tr>\n</thead>\n<tbody>\n<tr class="odd">\n<td style="text-align: right;">6</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: right;">0</td>\n<td style="text-align: right;">NA</td>\n<td style="text-align: right;">6</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">Chicago Bulls</td>\n<td style="text-align: right;">115</td>\n<td style="text-align: left;">Brooklyn Nets</td>\n<td style="text-align: right;">100</td>\n<td style="text-align: left;">FALSE</td>\n<td style="text-align: right;">NA</td>\n</tr>\n<tr class="even">\n<td style="text-align: right;">7</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: right;">NA</td>\n<td style="text-align: right;">0</td>\n<td style="text-align: right;">7</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">Utah Jazz</td>\n<td style="text-align: right;">87</td>\n<td style="text-align: left;">Detroit Pistons</td>\n<td style="text-align: right;">92</td>\n<td style="text-align: left;">TRUE</td>\n<td style="text-align: right;">NA</td>\n</tr>\n<tr class="odd">\n<td style="text-align: right;">12</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: right;">0</td>\n<td style="text-align: right;">NA</td>\n<td style="text-align: right;">12</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">Cleveland Cavaliers</td>\n<td style="text-align: right;">106</td>\n<td style="text-align: left;">Memphis Grizzlies</td>\n<td style="text-align: right;">76</td>\n<td style="text-align: left;">FALSE</td>\n<td style="text-align: right;">NA</td>\n</tr>\n<tr class="even">\n<td style="text-align: right;">15</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: right;">0</td>\n<td style="text-align: right;">NA</td>\n<td style="text-align: right;">15</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">New Orleans Pelicans</td>\n<td style="text-align: right;">94</td>\n<td style="text-align: left;">Portland Trail Blazers</td>\n<td style="text-align: right;">112</td>\n<td style="text-align: left;">TRUE</td>\n<td style="text-align: right;">NA</td>\n</tr>\n<tr class="odd">\n<td style="text-align: right;">18</td>\n<td style="text-align: left;">2015-10-29</td>\n<td style="text-align: right;">0</td>\n<td style="text-align: right;">0</td>\n<td style="text-align: right;">18</td>\n<td style="text-align: left;">2015-10-29</td>\n<td style="text-align: left;">Memphis Grizzlies</td>\n<td style="text-align: right;">112</td>\n<td style="text-align: left;">Indiana Pacers</td>\n<td style="text-align: right;">103</td>\n<td style="text-align: left;">FALSE</td>\n<td style="text-align: right;">0</td>\n</tr>\n</tbody>\n</table>\n','\n<table>\n<thead>\n<tr class="header">\n<th style="text-align: right;">game_id</th>\n<th style="text-align: left;">date</th>\n<th style="text-align: right;">away_rest</th>\n<th style="text-align: right;">home_rest</th>\n<th style="text-align: left;">away_team</th>\n<th style="text-align: right;">away_points</th>\n<th style="text-align: left;">home_team</th>\n<th style="text-align: right;">home_points</th>\n<th style="text-align: left;">home_win</th>\n<th style="text-align: right;">rest_spread</th>\n</tr>\n</thead>\n<tbody>\n<tr class="odd">\n<td style="text-align: right;">6</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: right;">0</td>\n<td style="text-align: right;">NA</td>\n<td style="text-align: left;">Chicago Bulls</td>\n<td style="text-align: right;">115</td>\n<td style="text-align: left;">Brooklyn Nets</td>\n<td style="text-align: right;">100</td>\n<td style="text-align: left;">FALSE</td>\n<td style="text-align: right;">NA</td>\n</tr>\n<tr class="even">\n<td style="text-align: right;">7</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: right;">NA</td>\n<td style="text-align: right;">0</td>\n<td style="text-align: left;">Utah Jazz</td>\n<td style="text-align: right;">87</td>\n<td style="text-align: left;">Detroit Pistons</td>\n<td style="text-align: right;">92</td>\n<td style="text-align: left;">TRUE</td>\n<td style="text-align: right;">NA</td>\n</tr>\n<tr class="odd">\n<td style="text-align: right;">12</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: right;">0</td>\n<td style="text-align: right;">NA</td>\n<td style="text-align: left;">Cleveland Cavaliers</td>\n<td style="text-align: right;">106</td>\n<td style="text-align: left;">Memphis Grizzlies</td>\n<td style="text-align: right;">76</td>\n<td style="text-align: left;">FALSE</td>\n<td style="text-align: right;">NA</td>\n</tr>\n<tr class="even">\n<td style="text-align: right;">15</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: right;">0</td>\n<td style="text-align: right;">NA</td>\n<td style="text-align: left;">New Orleans Pelicans</td>\n<td style="text-align: right;">94</td>\n<td style="text-align: left;">Portland Trail Blazers</td>\n<td style="text-align: right;">112</td>\n<td style="text-align: left;">TRUE</td>\n<td style="text-align: right;">NA</td>\n</tr>\n<tr class="odd">\n<td style="text-align: right;">18</td>\n<td style="text-align: left;">2015-10-29</td>\n<td style="text-align: right;">0</td>\n<td style="text-align: right;">0</td>\n<td style="text-align: left;">Memphis Grizzlies</td>\n<td style="text-align: right;">112</td>\n<td style="text-align: left;">Indiana Pacers</td>\n<td style="text-align: right;">103</td>\n<td style="text-align: left;">FALSE</td>\n<td style="text-align: right;">0</td>\n</tr>\n</tbody>\n</table>\n','\n<table>\n<thead>\n<tr class="header">\n<th style="text-align: right;">game_id</th>\n<th style="text-align: left;">date</th>\n<th style="text-align: left;">away_rest</th>\n<th style="text-align: left;">home_rest</th>\n<th style="text-align: left;">away_team</th>\n<th style="text-align: right;">away_points</th>\n<th style="text-align: left;">home_team</th>\n<th style="text-align: right;">home_points</th>\n<th style="text-align: left;">home_win</th>\n<th style="text-align: left;">rest_spread</th>\n</tr>\n</thead>\n<tbody>\n<tr class="odd">\n<td style="text-align: right;">6</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">0 days</td>\n<td style="text-align: left;">NA days</td>\n<td style="text-align: left;">Chicago Bulls</td>\n<td style="text-align: right;">115</td>\n<td style="text-align: left;">Brooklyn Nets</td>\n<td style="text-align: right;">100</td>\n<td style="text-align: left;">FALSE</td>\n<td style="text-align: left;">NA days</td>\n</tr>\n<tr class="even">\n<td style="text-align: right;">7</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">NA days</td>\n<td style="text-align: left;">0 days</td>\n<td style="text-align: left;">Utah Jazz</td>\n<td style="text-align: right;">87</td>\n<td style="text-align: left;">Detroit Pistons</td>\n<td style="text-align: right;">92</td>\n<td style="text-align: left;">TRUE</td>\n<td style="text-align: left;">NA days</td>\n</tr>\n<tr class="odd">\n<td style="text-align: right;">12</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">0 days</td>\n<td style="text-align: left;">NA days</td>\n<td style="text-align: left;">Cleveland Cavaliers</td>\n<td style="text-align: right;">106</td>\n<td style="text-align: left;">Memphis Grizzlies</td>\n<td style="text-align: right;">76</td>\n<td style="text-align: left;">FALSE</td>\n<td style="text-align: left;">NA days</td>\n</tr>\n<tr class="even">\n<td style="text-align: right;">15</td>\n<td style="text-align: left;">2015-10-28</td>\n<td style="text-align: left;">0 days</td>\n<td style="text-align: left;">NA days</td>\n<td style="text-align: left;">New Orleans Pelicans</td>\n<td style="text-align: right;">94</td>\n<td style="text-align: left;">Portland Trail Blazers</td>\n<td style="text-align: right;">112</td>\n<td style="text-align: left;">TRUE</td>\n<td style="text-align: left;">NA days</td>\n</tr>\n<tr class="odd">\n<td style="text-align: right;">18</td>\n<td style="text-align: left;">2015-10-29</td>\n<td style="text-align: left;">0 days</td>\n<td style="text-align: left;">0 days</td>\n<td style="text-align: left;">Memphis Grizzlies</td>\n<td style="text-align: right;">112</td>\n<td style="text-align: left;">Indiana Pacers</td>\n<td style="text-align: right;">103</td>\n<td style="text-align: left;">FALSE</td>\n<td style="text-align: left;">0 days</td>\n</tr>\n</tbody>\n</table>\n',"<div><style>\n.dataframe > thead > tr,\n.dataframe > tbody > tr {\n  text-align: right;\n  white-space: pre-wrap;\n}\n</style>\n<small>shape: (5, 10)</small>",'\n<table class="dataframe" data-quarto-postprocess="true" data-border="1">\n<thead>\n<tr class="header">\n<th data-quarto-table-cell-role="th">game_id</th>\n<th data-quarto-table-cell-role="th">date</th>\n<th data-quarto-table-cell-role="th">away_rest</th>\n<th data-quarto-table-cell-role="th">home_rest</th>\n<th data-quarto-table-cell-role="th">away_team</th>\n<th data-quarto-table-cell-role="th">away_points</th>\n<th data-quarto-table-cell-role="th">home_team</th>\n<th data-quarto-table-cell-role="th">home_points</th>\n<th data-quarto-table-cell-role="th">home_win</th>\n<th data-quarto-table-cell-role="th">rest_spread</th>\n</tr>\n<tr class="odd">\n<th>u32</th>\n<th>date</th>\n<th>i8</th>\n<th>i8</th>\n<th>str</th>\n<th>i64</th>\n<th>str</th>\n<th>i64</th>\n<th>bool</th>\n<th>i8</th>\n</tr>\n</thead>\n<tbody>\n<tr class="odd">\n<td>5</td>\n<td>2015-10-28</td>\n<td>0</td>\n<td>null</td>\n<td>"Chicago Bulls"</td>\n<td>115</td>\n<td>"Brooklyn Nets"</td>\n<td>100</td>\n<td>false</td>\n<td>null</td>\n</tr>\n<tr class="even">\n<td>6</td>\n<td>2015-10-28</td>\n<td>null</td>\n<td>0</td>\n<td>"Utah Jazz"</td>\n<td>87</td>\n<td>"Detroit Pistons"</td>\n<td>92</td>\n<td>true</td>\n<td>null</td>\n</tr>\n<tr class="odd">\n<td>11</td>\n<td>2015-10-28</td>\n<td>0</td>\n<td>null</td>\n<td>"Cleveland Cavaliers"</td>\n<td>106</td>\n<td>"Memphis Grizzlies"</td>\n<td>76</td>\n<td>false</td>\n<td>null</td>\n</tr>\n<tr class="even">\n<td>14</td>\n<td>2015-10-28</td>\n<td>0</td>\n<td>null</td>\n<td>"New Orleans Pelicans"</td>\n<td>94</td>\n<td>"Portland Trail Blazers"</td>\n<td>112</td>\n<td>true</td>\n<td>null</td>\n</tr>\n<tr class="odd">\n<td>17</td>\n<td>2015-10-29</td>\n<td>0</td>\n<td>0</td>\n<td>"Memphis Grizzlies"</td>\n<td>112</td>\n<td>"Indiana Pacers"</td>\n<td>103</td>\n<td>false</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n',"</div>"],c=[{value:"Read the Data",id:"read-the-data",level:2},{value:"Download",id:"download",level:3},{value:"Load the Data",id:"load-the-data",level:3},{value:"Cleaning",id:"sec-cleaning",level:2},{value:"Tidy Data",id:"sec-tidy-data",level:2},{value:"Unpivot",id:"unpivot",level:3},{value:"Pivot",id:"pivot",level:3}];function y(t){const e={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.a)(),...t.components},{Details:n}=e;return n||function(t,e){throw new Error("Expected "+(e?"component":"object")+" `"+t+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.admonition,{type:"note",children:(0,a.jsxs)(e.p,{children:["This page is based on the chapter ",(0,a.jsx)(e.a,{href:"https://kevinheavey.github.io/modern-polars/tidy.html",children:"\u201cReshaping and Tidy Data\u201d"})," of the Modern Polars book."]})}),"\n",(0,a.jsx)(e.h2,{id:"read-the-data",children:"Read the Data"}),"\n",(0,a.jsx)(e.admonition,{type:"important",children:(0,a.jsxs)(e.p,{children:["Since the PRQL and SQL results shown on this page are after being converted to R DataFrame via knitr, they have been converted from DuckDB types to R types. So ",(0,a.jsx)(e.code,{children:"NULL"})," in DuckDB is shown as ",(0,a.jsx)(e.code,{children:"NA"}),"."]})}),"\n",(0,a.jsx)(e.h3,{id:"download",children:"Download"}),"\n",(0,a.jsx)(e.p,{children:"Download the data to be analysis (tables on the website) and write the data to CSV files."}),"\n",(0,a.jsxs)(e.p,{children:["This document uses R to download the data from the source here, but we can also download and use the CSV files included in the ",(0,a.jsx)(e.a,{href:"https://github.com/kevinheavey/modern-polars/tree/master/data/nba",children:"kevinheavey/modern-polars"})," GitHub repository."]}),"\n",(0,a.jsxs)(d.Z,{children:[(0,a.jsx)(s.Z,{value:"R",children:(0,a.jsxs)(n,{class:"code-fold",children:[(0,a.jsx)("summary",{children:"Code"}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-r",metastring:"showLineNumbers",children:'nba_dir <- file.path("data", "nba")\n\nmonths <- c(\n  "october",\n  "november",\n  "december",\n  "january",\n  "february",\n  "march",\n  "april",\n  "may",\n  "june"\n)\n\ncolumn_names <- c(\n  date = "date",\n  away_team = "visitor_neutral",\n  away_points = "pts",\n  home_team = "home_neutral",\n  home_points = "pts_2"\n)\n\n.write_data <- function(month) {\n  base_url <- "http://www.basketball-reference.com/leagues/NBA_2016_games-{month}.html"\n\n  glue::glue(base_url, month = month) |>\n    rvest::read_html() |>\n    rvest::html_table() |>\n    (\\(x) x[[1]])() |> # TODO: Rewrite after R 4.3\n    janitor::clean_names() |>\n    dplyr::select(all_of(column_names)) |>\n    dplyr::filter(date != "Playoffs") |>\n    readr::write_csv(file.path(nba_dir, glue::glue("{month}.csv")))\n}\n\nif (!fs::dir_exists(nba_dir)) {\n  fs::dir_create(nba_dir)\n  months |>\n    purrr::walk(.write_data)\n}\n'})})]})}),(0,a.jsxs)(s.Z,{value:"Shell",children:[(0,a.jsxs)(e.p,{children:["This is a sample command to download the CSV files from the ",(0,a.jsx)(e.code,{children:"kevinheavey/modern-polars"})," GitHub repository."]}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",metastring:'showLineNumbers title="Terminal"',children:"mkdir data/nba\ncurl -sL https://github.com/kevinheavey/modern-polars/raw/87539190dde3e99d5e4c4f9957c78932a33075a0/data/nba/october.csv -o data/nba/october.csv\ncurl -sL https://github.com/kevinheavey/modern-polars/raw/87539190dde3e99d5e4c4f9957c78932a33075a0/data/nba/november.csv -o data/nba/november.csv\ncurl -sL https://github.com/kevinheavey/modern-polars/raw/87539190dde3e99d5e4c4f9957c78932a33075a0/data/nba/december.csv -o data/nba/december.csv\ncurl -sL https://github.com/kevinheavey/modern-polars/raw/87539190dde3e99d5e4c4f9957c78932a33075a0/data/nba/january.csv -o data/nba/january.csv\ncurl -sL https://github.com/kevinheavey/modern-polars/raw/87539190dde3e99d5e4c4f9957c78932a33075a0/data/nba/february.csv -o data/nba/february.csv\ncurl -sL https://github.com/kevinheavey/modern-polars/raw/87539190dde3e99d5e4c4f9957c78932a33075a0/data/nba/march.csv -o data/nba/march.csv\ncurl -sL https://github.com/kevinheavey/modern-polars/raw/87539190dde3e99d5e4c4f9957c78932a33075a0/data/nba/april.csv -o data/nba/april.csv\ncurl -sL https://github.com/kevinheavey/modern-polars/raw/87539190dde3e99d5e4c4f9957c78932a33075a0/data/nba/may.csv -o data/nba/may.csv\ncurl -sL https://github.com/kevinheavey/modern-polars/raw/87539190dde3e99d5e4c4f9957c78932a33075a0/data/nba/june.csv -o data/nba/june.csv\n"})})]})]}),"\n",(0,a.jsx)(e.h3,{id:"load-the-data",children:"Load the Data"}),"\n",(0,a.jsx)(e.p,{children:"After the CSV files are ready, load these into DuckDB (in-memory) database table, R DataFrame, and Python polars.LazyFrame."}),"\n",(0,a.jsxs)(d.Z,{children:[(0,a.jsxs)(s.Z,{value:"DuckDB",children:[(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-sql",metastring:"showLineNumbers",children:"CREATE TABLE tab AS FROM read_csv_auto('data/nba/*.csv')\n"})}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-sql",metastring:"showLineNumbers",children:"FROM tab\nLIMIT 5\n"})}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[0]}})]}),(0,a.jsxs)(s.Z,{value:"R DataFrame",children:[(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-r",metastring:"showLineNumbers",children:'library(dplyr, warn.conflicts = FALSE)\n\ndf <- readr::read_csv(\n  fs::dir_ls("data/nba", glob = "*.csv")\n)\n'})}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-r",metastring:"showLineNumbers",children:"df |> head(5)\n"})}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[1]}})]}),(0,a.jsxs)(s.Z,{value:"Python polars.LazyFrame",children:[(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'import polars as pl\n\nlf = pl.scan_csv("data/nba/*.csv")\n'})}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"lf.head(5).collect()\n"})}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[2]}}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[3]}}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[4]}})]})]}),"\n",(0,a.jsx)(e.h2,{id:"sec-cleaning",children:"Cleaning"}),"\n",(0,a.jsxs)(e.p,{children:["Convert the ",(0,a.jsx)(e.code,{children:"date"})," column to date type and delete rows containing missing values (",(0,a.jsx)(e.code,{children:"null"}),")."]}),"\n",(0,a.jsxs)(e.p,{children:["PRQL does not have a \u201cremove rows with missing values in any column\u201d syntax (",(0,a.jsx)(e.a,{href:"https://github.com/PRQL/prql/issues/2386",children:"PRQL/prql#2386"}),"), but DuckDB SQL does (>= 0.8, ",(0,a.jsx)(e.a,{href:"https://github.com/duckdb/duckdb/pull/6621",children:"duckdb/duckdb#6621"}),"), so it can be used."]}),"\n",(0,a.jsxs)(d.Z,{children:[(0,a.jsxs)(s.Z,{value:"PRQL DuckDB",children:[(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-elm",metastring:"showLineNumbers",children:'let games = (\n  from tab\n  filter s"COLUMNS(*) IS NOT NULL"\n  derive date_new = (s"strptime(date, \'%a, %b %d, %Y\')" | as date)\n  select !{this.date} # `this` points to refer to current relation\n  sort date_new\n  derive game_id = (row_number this)\n)\n\nfrom games\ntake 5\n'})}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[5]}})]}),(0,a.jsxs)(s.Z,{value:"SQL DuckDB",children:[(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-sql",metastring:"showLineNumbers",children:"CREATE TABLE games AS (\n  WITH _tab1 AS (\n      SELECT\n        * REPLACE (strptime(date, '%a, %b %d, %Y')::date AS date)\n      FROM tab\n      WHERE COLUMNS(*) IS NOT NULL\n    )\n\n  SELECT\n    row_number() OVER(ORDER BY date) AS game_id,\n    *\n  FROM _tab1\n  ORDER BY date\n)\n"})}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-sql",metastring:"showLineNumbers",children:"FROM games\nLIMIT 5\n"})}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[6]}})]}),(0,a.jsxs)(s.Z,{value:"dplyr R",children:[(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-r",metastring:"showLineNumbers",children:'games <- df |>\n  filter(!if_any(everything(), is.na)) |> # Also can use `tidyr::drop_na`\n  mutate(\n    date = lubridate::parse_date_time(date, "%a, %b %d, %Y") |>\n      lubridate::as_date()\n  ) |>\n  arrange(date) |>\n  mutate(game_id = row_number(), .before = 1)\n'})}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-r",metastring:"showLineNumbers",children:"games |>\n  head(5)\n"})}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[7]}})]}),(0,a.jsxs)(s.Z,{value:"Python Polars",children:[(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'games = (\n    lf.filter(~pl.any_horizontal(pl.all().is_null())) # Also can use `polars.LazyFrame.drop_nulls`\n    .with_columns(\n        pl.col("date").str.strptime(pl.Date, "%a, %b %d, %Y"),\n    )\n    .sort("date")\n    .with_row_index("game_id")\n    .collect()\n)\n'})}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"games.head(5)\n"})}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[8]}}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[9]}}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[10]}})]})]}),"\n",(0,a.jsxs)(e.p,{children:["Looking at the result tables, we notice that the PRQL result is different from the other results; A column named ",(0,a.jsx)(e.code,{children:"date"})," in other results is named ",(0,a.jsx)(e.code,{children:"date_new"})," in PRQL. This is because another name is needed to avoid the behavior that using the column name ",(0,a.jsx)(e.code,{children:"date"})," here would add a new column called ",(0,a.jsx)(e.code,{children:"date:1"})," instead of updating the original ",(0,a.jsx)(e.code,{children:"date"})," column."]}),"\n",(0,a.jsxs)(e.p,{children:["In DuckDB SQL, we can use ",(0,a.jsx)(e.a,{href:"https://duckdb.org/docs/sql/expressions/star#replace-clause",children:"Replace Clause"})," to update the original column with the same column name."]}),"\n",(0,a.jsx)(e.p,{children:"The SQL generated by the PRQL compiler looks like this:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-sql",metastring:'showLineNumbers title="SQL"',children:"WITH games AS (\n  SELECT\n    * EXCLUDE (date),\n    CAST(strptime(date, '%a, %b %d, %Y') AS date) AS date_new,\n    ROW_NUMBER() OVER (\n      ORDER BY\n        CAST(strptime(date, '%a, %b %d, %Y') AS date)\n    ) AS game_id\n  FROM\n    tab\n  WHERE\n    COLUMNS(*) IS NOT NULL\n)\nSELECT\n  *\nFROM\n  games\nORDER BY\n  date_new\nLIMIT\n  5\n\n-- Generated by PRQL compiler version:0.11.2 target:sql.duckdb (https://prql-lang.org)\n"})}),"\n",(0,a.jsx)(e.h2,{id:"sec-tidy-data",children:"Tidy Data"}),"\n",(0,a.jsx)(e.admonition,{type:"important",children:(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["PRQL does not yet support PIVOT and UNPIVOT. (",(0,a.jsx)(e.a,{href:"https://github.com/PRQL/prql/issues/644",children:"PRQL/prql#644"}),")"]}),"\n",(0,a.jsxs)(e.li,{children:["DuckDB SQL supports PIVOT and UNPIVOT >= 0.8. (",(0,a.jsx)(e.a,{href:"https://github.com/duckdb/duckdb/pull/6387",children:"duckdb/duckdb#6387"}),")"]}),"\n"]})}),"\n",(0,a.jsx)(e.h3,{id:"unpivot",children:"Unpivot"}),"\n",(0,a.jsx)(e.p,{children:"Transforms the data from wide format to long format. This transformation is called by names such as unpivot, pivot longer, and melt."}),"\n",(0,a.jsxs)(d.Z,{children:[(0,a.jsxs)(s.Z,{value:"PRQL DuckDB",children:[(0,a.jsx)(e.admonition,{type:"important",children:(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"games"})," in this query is defiened in ",(0,a.jsx)("a",{href:"#sec-cleaning",class:"quarto-xref",children:"Section\xa02"})," with SQL, not with PRQL."]})}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-elm",metastring:"showLineNumbers",children:'from s"""\nSELECT *\nFROM (\n  PIVOT_LONGER games\n  ON away_team, home_team\n  INTO\n    NAME variable\n    VALUE team\n)\n"""\ngroup {team} (\n  sort this.date\n  derive rest = this.date - (this.date | lag 1) - 1\n)\nselect !{away_points, home_points}\nfilter rest != null\nsort game_id\ntake 5\n'})}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[11]}})]}),(0,a.jsxs)(s.Z,{value:"SQL DuckDB",children:[(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-sql",metastring:"showLineNumbers",children:"CREATE TABLE tidy AS (\n  WITH _tab1 AS (\n    PIVOT_LONGER games\n    ON away_team, home_team\n    INTO\n      NAME variable\n      VALUE team\n  ),\n\n  _tab2 AS (\n    SELECT\n      COLUMNS(x -> NOT suffix(x, '_points'))\n    FROM _tab1\n  ),\n\n  _tab3 AS (\n    SELECT\n      *,\n      date - lag(date) OVER (PARTITION BY team ORDER BY date) -1 AS rest\n    FROM _tab2\n  )\n\n  SELECT *\n  FROM _tab3\n  WHERE rest IS NOT NULL\n  ORDER BY game_id\n)\n"})}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-sql",metastring:"showLineNumbers",children:"FROM tidy\nLIMIT 5\n"})}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[12]}})]}),(0,a.jsxs)(s.Z,{value:"dplyr R",children:[(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-r",metastring:"showLineNumbers",children:'tidy <- games |>\n  tidyr::pivot_longer(\n    cols = c(away_team, home_team),\n    names_to = "variable",\n    values_to = "team"\n  ) |>\n  select(!ends_with("_points")) |>\n  arrange(game_id) |>\n  mutate(\n    rest = date - lag(date) - 1,\n    .by = team\n  ) |>\n  filter(!is.na(rest))\n'})}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-r",metastring:"showLineNumbers",children:"tidy |>\n  head(5)\n"})}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[13]}})]}),(0,a.jsxs)(s.Z,{value:"Python Polars",children:[(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'tidy = (\n    games.melt(\n        id_vars=["game_id", "date"],\n        value_vars=["away_team", "home_team"],\n        value_name="team",\n    )\n    .sort("game_id")\n    .with_columns(\n      rest=(pl.col("date").diff().over("team").dt.total_days() - 1).cast(pl.Int8)\n    )\n    .drop_nulls("rest")\n)\n'})}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"tidy.head(5)\n"})}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[14]}}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[15]}}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[16]}})]})]}),"\n",(0,a.jsx)(e.p,{children:"PRQL, SQL and dplyr remove unnecessary columns after UNPIVOT (columns that were automatically removed in the original Polars and Pandas example)."}),"\n",(0,a.jsx)(e.h3,{id:"pivot",children:"Pivot"}),"\n",(0,a.jsx)(e.p,{children:"Transforms the data from long format to wide format. This transformation is called by names such as pivot, pivot wider."}),"\n",(0,a.jsxs)(d.Z,{children:[(0,a.jsxs)(s.Z,{value:"PRQL DuckDB",children:[(0,a.jsx)(e.admonition,{type:"important",children:(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"tidy"})," in this query is defiened in ",(0,a.jsx)("a",{href:"#sec-tidy-data",class:"quarto-xref",children:"Section\xa03"})," with SQL, and ",(0,a.jsx)(e.code,{children:"games"})," is defiened in ",(0,a.jsx)("a",{href:"#sec-cleaning",class:"quarto-xref",children:"Section\xa02"})," with SQL."]})}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-elm",metastring:"showLineNumbers",children:'from s"""\nSELECT *\nFROM (\n  PIVOT_WIDER tidy ON variable USING FIRST(rest) GROUP BY (game_id, date)\n)\n"""\nderive {\n  away_rest = away_team,\n  home_rest = home_team\n}\nselect !{\n  away_team,\n  home_team\n}\njoin side:left games (==game_id && ==date)\nderive {\n  home_win = games.home_points > games.away_points,\n  rest_spread = home_rest - away_rest\n}\nsort games.game_id\ntake 5\n'})}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[17]}})]}),(0,a.jsxs)(s.Z,{value:"SQL DuckDB",children:[(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-sql",metastring:"showLineNumbers",children:"CREATE TABLE by_game AS (\n  WITH _tab1 AS (\n    PIVOT_WIDER tidy ON variable USING FIRST(rest) GROUP BY (game_id, date)\n  )\n\n  SELECT\n    * EXCLUDE(away_team, home_team),\n    away_team AS away_rest,\n    home_team AS home_rest\n  FROM _tab1\n)\n"})}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-sql",metastring:"showLineNumbers",children:"CREATE TABLE joined AS (\n  SELECT\n    *,\n    home_points > away_points AS home_win,\n    home_rest - away_rest AS rest_spread\n  FROM by_game\n  LEFT JOIN games USING (game_id, date)\n  ORDER BY game_id\n)\n"})}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-sql",metastring:"showLineNumbers",children:"FROM joined\nLIMIT 5\n"})}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[18]}})]}),(0,a.jsxs)(s.Z,{value:"dplyr R",children:[(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-r",metastring:"showLineNumbers",children:'by_game <- tidy |>\n  tidyr::pivot_wider(\n    id_cols = c("game_id", "date"),\n    values_from = "rest",\n    names_from = "variable"\n  ) |>\n  rename(\n    away_rest = away_team,\n    home_rest = home_team\n  )\n\njoined <- by_game |>\n  left_join(games, by = c("game_id", "date")) |>\n  mutate(\n    home_win = home_points > away_points,\n    rest_spread = home_rest - away_rest\n  )\n'})}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-r",metastring:"showLineNumbers",children:"joined |>\n  head(5)\n"})}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[19]}})]}),(0,a.jsxs)(s.Z,{value:"Python Polars",children:[(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'by_game = tidy.pivot(\n    values="rest", index=["game_id", "date"], columns="variable"\n).rename({"away_team": "away_rest", "home_team": "home_rest"})\n\njoined = by_game.join(games, on=["game_id", "date"]).with_columns(\n    home_win=pl.col("home_points") > pl.col("away_points"),\n    rest_spread=pl.col("home_rest") - pl.col("away_rest"),\n)\n'})}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"joined.head(5)\n"})}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[20]}}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[21]}}),(0,a.jsx)("div",{dangerouslySetInnerHTML:{__html:g[22]}})]})]}),"\n",(0,a.jsxs)(e.p,{children:["There are more columns in the PRQL result than in the other results. Because the output SQL is not using ",(0,a.jsx)(e.code,{children:"USING"})," for joins (",(0,a.jsx)(e.a,{href:"https://github.com/PRQL/prql/issues/1335",children:"PRQL/prql#1335"}),")."]}),"\n",(0,a.jsx)(e.p,{children:"The SQL generated by the PRQL compiler looks like this:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-sql",metastring:'showLineNumbers title="SQL"',children:"WITH table_0 AS (\n  SELECT\n    *\n  FROM\n    (\n      PIVOT_WIDER tidy ON variable USING FIRST(rest)\n      GROUP BY\n        (game_id, date)\n    )\n),\ntable_1 AS (\n  SELECT\n    * EXCLUDE (away_team, home_team),\n    away_team AS away_rest,\n    home_team AS home_rest\n  FROM\n    table_0\n)\nSELECT\n  table_1.*,\n  games.*,\n  games.home_points > games.away_points AS home_win,\n  table_1.home_rest - table_1.away_rest AS rest_spread\nFROM\n  table_1\n  LEFT JOIN games ON table_1.game_id = games.game_id\n  AND table_1.date = games.date\nORDER BY\n  games.game_id\nLIMIT\n  5\n\n-- Generated by PRQL compiler version:0.11.2 target:sql.duckdb (https://prql-lang.org)\n"})})]})}function x(t={}){const{wrapper:e}={...(0,l.a)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(y,{...t})}):y(t)}},5162:(t,e,n)=>{n.d(e,{Z:()=>s});n(7294);var a=n(512);const l={tabItem:"tabItem_Ymn6"};var d=n(5893);function s(t){let{children:e,hidden:n,className:s}=t;return(0,d.jsx)("div",{role:"tabpanel",className:(0,a.Z)(l.tabItem,s),hidden:n,children:e})}},4866:(t,e,n)=>{n.d(e,{Z:()=>w});var a=n(7294),l=n(512),d=n(2466),s=n(6550),i=n(469),r=n(1980),h=n(7392),o=n(812);function g(t){return a.Children.toArray(t).filter((t=>"\n"!==t)).map((t=>{if(!t||(0,a.isValidElement)(t)&&function(t){const{props:e}=t;return!!e&&"object"==typeof e&&"value"in e}(t))return t;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function c(t){const{values:e,children:n}=t;return(0,a.useMemo)((()=>{const t=e??function(t){return g(t).map((t=>{let{props:{value:e,label:n,attributes:a,default:l}}=t;return{value:e,label:n,attributes:a,default:l}}))}(n);return function(t){const e=(0,h.l)(t,((t,e)=>t.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((t=>t.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(t),t}),[e,n])}function y(t){let{value:e,tabValues:n}=t;return n.some((t=>t.value===e))}function x(t){let{queryString:e=!1,groupId:n}=t;const l=(0,s.k6)(),d=function(t){let{queryString:e=!1,groupId:n}=t;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,r._X)(d),(0,a.useCallback)((t=>{if(!d)return;const e=new URLSearchParams(l.location.search);e.set(d,t),l.replace({...l.location,search:e.toString()})}),[d,l])]}function m(t){const{defaultValue:e,queryString:n=!1,groupId:l}=t,d=c(t),[s,r]=(0,a.useState)((()=>function(t){let{defaultValue:e,tabValues:n}=t;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!y({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((t=>t.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const a=n.find((t=>t.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:e,tabValues:d}))),[h,g]=x({queryString:n,groupId:l}),[m,u]=function(t){let{groupId:e}=t;const n=function(t){return t?`docusaurus.tab.${t}`:null}(e),[l,d]=(0,o.Nk)(n);return[l,(0,a.useCallback)((t=>{n&&d.set(t)}),[n,d])]}({groupId:l}),f=(()=>{const t=h??m;return y({value:t,tabValues:d})?t:null})();(0,i.Z)((()=>{f&&r(f)}),[f]);return{selectedValue:s,selectValue:(0,a.useCallback)((t=>{if(!y({value:t,tabValues:d}))throw new Error(`Can't select invalid tab value=${t}`);r(t),g(t),u(t)}),[g,u,d]),tabValues:d}}var u=n(2389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var p=n(5893);function b(t){let{className:e,block:n,selectedValue:a,selectValue:s,tabValues:i}=t;const r=[],{blockElementScrollPositionUntilNextRender:h}=(0,d.o5)(),o=t=>{const e=t.currentTarget,n=r.indexOf(e),l=i[n].value;l!==a&&(h(e),s(l))},g=t=>{let e=null;switch(t.key){case"Enter":o(t);break;case"ArrowRight":{const n=r.indexOf(t.currentTarget)+1;e=r[n]??r[0];break}case"ArrowLeft":{const n=r.indexOf(t.currentTarget)-1;e=r[n]??r[r.length-1];break}}e?.focus()};return(0,p.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},e),children:i.map((t=>{let{value:e,label:n,attributes:d}=t;return(0,p.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:t=>r.push(t),onKeyDown:g,onClick:o,...d,className:(0,l.Z)("tabs__item",f.tabItem,d?.className,{"tabs__item--active":a===e}),children:n??e},e)}))})}function _(t){let{lazy:e,children:n,selectedValue:l}=t;const d=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const t=d.find((t=>t.props.value===l));return t?(0,a.cloneElement)(t,{className:"margin-top--md"}):null}return(0,p.jsx)("div",{className:"margin-top--md",children:d.map(((t,e)=>(0,a.cloneElement)(t,{key:e,hidden:t.props.value!==l})))})}function v(t){const e=m(t);return(0,p.jsxs)("div",{className:(0,l.Z)("tabs-container",f.tabList),children:[(0,p.jsx)(b,{...e,...t}),(0,p.jsx)(_,{...e,...t})]})}function w(t){const e=(0,u.Z)();return(0,p.jsx)(v,{...t,children:g(t.children)},String(e))}},1151:(t,e,n)=>{n.d(e,{Z:()=>i,a:()=>s});var a=n(7294);const l={},d=a.createContext(l);function s(t){const e=a.useContext(d);return a.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(l):t.components||l:s(t.components),a.createElement(d.Provider,{value:e},t.children)}}}]);